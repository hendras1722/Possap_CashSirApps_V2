[{"E:\\posappku\\POSAPP_with_redux\\src\\index.js":"1","E:\\posappku\\POSAPP_with_redux\\src\\App.js":"2","E:\\posappku\\POSAPP_with_redux\\src\\serviceWorker.js":"3","E:\\posappku\\POSAPP_with_redux\\src\\Component\\redux\\store.js":"4","E:\\posappku\\POSAPP_with_redux\\src\\Component\\auth\\Login.js":"5","E:\\posappku\\POSAPP_with_redux\\src\\Component\\Home\\Home.js":"6","E:\\posappku\\POSAPP_with_redux\\src\\Component\\img\\cobalagi.js":"7","E:\\posappku\\POSAPP_with_redux\\src\\Component\\Layout\\Product.js":"8","E:\\posappku\\POSAPP_with_redux\\src\\Component\\Layout\\Navbar.js":"9","E:\\posappku\\POSAPP_with_redux\\src\\Component\\Layout\\loading.js":"10","E:\\posappku\\POSAPP_with_redux\\src\\Component\\redux\\actions\\carts.js":"11","E:\\posappku\\POSAPP_with_redux\\src\\Component\\redux\\actions\\Product.js":"12","E:\\posappku\\POSAPP_with_redux\\src\\Component\\redux\\reducers\\index.js":"13","E:\\posappku\\POSAPP_with_redux\\src\\Component\\redux\\actions\\Category.js":"14","E:\\posappku\\POSAPP_with_redux\\src\\Component\\redux\\actions\\order.js":"15","E:\\posappku\\POSAPP_with_redux\\src\\Component\\redux\\actions\\user.js":"16","E:\\posappku\\POSAPP_with_redux\\src\\Component\\redux\\reducers\\Category.js":"17","E:\\posappku\\POSAPP_with_redux\\src\\Component\\redux\\reducers\\carts.js":"18","E:\\posappku\\POSAPP_with_redux\\src\\Component\\redux\\reducers\\auth.js":"19","E:\\posappku\\POSAPP_with_redux\\src\\Component\\redux\\reducers\\order.js":"20","E:\\posappku\\POSAPP_with_redux\\src\\Component\\redux\\reducers\\Product.js":"21","E:\\posappku\\POSAPP_with_redux\\src\\Component\\redux\\reducers\\user.js":"22","E:\\posappku\\POSAPP_with_redux\\src\\utils\\getUser.js":"23","E:\\posappku\\POSAPP_with_redux\\src\\utils\\Management.js":"24","E:\\posappku\\POSAPP_with_redux\\src\\Component\\redux\\types.js":"25","E:\\posappku\\POSAPP_with_redux\\src\\Component\\Layout\\NavbarSlide.js":"26","E:\\posappku\\POSAPP_with_redux\\src\\Route.js":"27","E:\\posappku\\POSAPP_with_redux\\src\\Component\\Home\\Dashboard.js":"28","E:\\posappku\\POSAPP_with_redux\\src\\Component\\Home\\ProductAdministrator.js":"29","E:\\posappku\\POSAPP_with_redux\\src\\Component\\Layout\\ModalNew.js":"30"},{"size":512,"mtime":1610620126847,"results":"31","hashOfConfig":"32"},{"size":1456,"mtime":1612857324724,"results":"33","hashOfConfig":"32"},{"size":5212,"mtime":1612676362312,"results":"34","hashOfConfig":"32"},{"size":382,"mtime":1610607434386,"results":"35","hashOfConfig":"32"},{"size":5484,"mtime":1612887859050,"results":"36","hashOfConfig":"32"},{"size":14004,"mtime":1612886852403,"results":"37","hashOfConfig":"32"},{"size":229,"mtime":1610592988210,"results":"38","hashOfConfig":"32"},{"size":18991,"mtime":1612773443128,"results":"39","hashOfConfig":"32"},{"size":3212,"mtime":1612451705676,"results":"40","hashOfConfig":"32"},{"size":1700,"mtime":1610592988127,"results":"41","hashOfConfig":"42"},{"size":449,"mtime":1610592988221,"results":"43","hashOfConfig":"32"},{"size":3295,"mtime":1610609558228,"results":"44","hashOfConfig":"32"},{"size":346,"mtime":1610592988224,"results":"45","hashOfConfig":"32"},{"size":1753,"mtime":1610600956916,"results":"46","hashOfConfig":"32"},{"size":761,"mtime":1610592988221,"results":"47","hashOfConfig":"32"},{"size":946,"mtime":1610592988222,"results":"48","hashOfConfig":"32"},{"size":2607,"mtime":1610592988222,"results":"49","hashOfConfig":"32"},{"size":3815,"mtime":1610809140908,"results":"50","hashOfConfig":"32"},{"size":690,"mtime":1610592988223,"results":"51","hashOfConfig":"32"},{"size":1455,"mtime":1610810959400,"results":"52","hashOfConfig":"32"},{"size":392,"mtime":1610608575941,"results":"53","hashOfConfig":"32"},{"size":1906,"mtime":1610592988226,"results":"54","hashOfConfig":"32"},{"size":1875,"mtime":1611057961856,"results":"55","hashOfConfig":"32"},{"size":123,"mtime":1610603583290,"results":"56","hashOfConfig":"42"},{"size":79,"mtime":1610608374788,"results":"57","hashOfConfig":"32"},{"size":10512,"mtime":1612872483383,"results":"58","hashOfConfig":"32"},{"size":1813,"mtime":1611013505267,"results":"59","hashOfConfig":"42"},{"size":6931,"mtime":1612707712068,"results":"60","hashOfConfig":"32"},{"size":2889,"mtime":1612886115903,"results":"61","hashOfConfig":"32"},{"size":6623,"mtime":1612886037267,"results":"62","hashOfConfig":"32"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},"1t3vd2f",{"filePath":"66","messages":"67","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"65"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"65"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},"14ef3x2",{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"65"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"78"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"65"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"65"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"65"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"126","messages":"127","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"128","messages":"129","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"65"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"133","messages":"134","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"E:\\posappku\\POSAPP_with_redux\\src\\index.js",[],["135","136"],"E:\\posappku\\POSAPP_with_redux\\src\\App.js",["137","138","139","140","141"],"E:\\posappku\\POSAPP_with_redux\\src\\serviceWorker.js",[],"E:\\posappku\\POSAPP_with_redux\\src\\Component\\redux\\store.js",[],"E:\\posappku\\POSAPP_with_redux\\src\\Component\\auth\\Login.js",["142","143"],"E:\\posappku\\POSAPP_with_redux\\src\\Component\\Home\\Home.js",[],"E:\\posappku\\POSAPP_with_redux\\src\\Component\\img\\cobalagi.js",[],["144","145"],"E:\\posappku\\POSAPP_with_redux\\src\\Component\\Layout\\Product.js",["146","147","148","149","150","151"],"// @ts-nocheck\r\nimport React, { useEffect, useState, Fragment, useCallback } from 'react'\r\nimport { getProducts } from '../redux/actions/Product'\r\nimport { addCart, deleteCart } from '../redux/actions/carts'\r\nimport { useDispatch } from 'react-redux'\r\nimport { connect } from 'react-redux'\r\nimport { postData, getData, notaDate } from '../../utils/getUser'\r\nimport { FaArrowAltCircleUp, FaArrowAltCircleDown } from 'react-icons/fa'\r\nimport Swal from 'sweetalert2'\r\nimport { useHistory } from 'react-router-dom'\r\n// import ModalPembayaran from './Modal'\r\n// import imageWelcome from '../../assets/10808.jpg'\r\nimport { Image, Row, Col, Button, Input, Modal, notification } from 'antd'\r\nimport './style.css'\r\n\r\nconst { TextArea } = Input\r\nconst Product = React.memo((props) => {\r\n    const [catatan, setCatatan] = useState('')\r\n    const [qty, setCount] = useState(0);\r\n    const [nameUserNya, setNameUser] = useState([])\r\n    const [modalPrint, setModalPrint] = useState(false)\r\n    const history = useHistory()\r\n    const dispatch = useDispatch()\r\n\r\n    const NameUser = async () => {\r\n        const pathname = history.location.pathname\r\n        const split = pathname.split('/')\r\n        const result = sessionStorage.getItem('ID')\r\n        const { data } = await getData(`/user?detail=${result}`)\r\n        const resultData = data.result\r\n        setNameUser(resultData)\r\n    }\r\n    const getOut = () => {\r\n        if (!sessionStorage) {\r\n            history.push('/login')\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        getOut()\r\n        NameUser()\r\n    }, [])\r\n    const ModalPrintnya = () => {\r\n        setModalPrint(true)\r\n    }\r\n    const closeHandle = () => {\r\n        setModalPrint(false)\r\n    }\r\n    const { send, product, setIsModalVisible, handleCancel } = props\r\n    const catatanData = {\r\n        catatan\r\n    }\r\n\r\n    const addPlus = () => {\r\n        if (nameUserNya?.Status === 1) {\r\n            if (send) {\r\n                const arrayPlus = send?.map((item) => item.price)\r\n                const reducer = (accumulator, currentValue) => accumulator + currentValue;\r\n                // console.log(arrayPlus.reduce(reducer))\r\n                return arrayPlus.reduce(reducer)\r\n            }\r\n        }\r\n    }\r\n    // const printContent = (el) => {\r\n    //     console.log(el, 'ininins')\r\n    //     var restorepage = document.body.innerHTML;\r\n    //     var printcontent = document.getElementById(el).innerHTML;\r\n    //     // document.body.innerHTML = printcontent;\r\n    //     window.print();\r\n    //     // document.body.innerHTML = restorepage;\r\n    // }\r\n\r\n\r\n    const addCount = useCallback(() => {\r\n        setCount(() => qty + 1)\r\n    }, [qty])\r\n    console.log(nameUserNya, 'ininiend')\r\n    const productIsi = () => {\r\n        if (nameUserNya?.Status === 1) {\r\n            return (\r\n                <div>\r\n                    <Row>\r\n                        <Col xs={24}>\r\n                            <div className=\"d-flex justify-content-center\">\r\n                                <div style={{ width: 300 }}>\r\n                                    <div style={{ display: send.length > 0 ? 'block' : 'none' }}>\r\n                                        <div className=\"text-center\">\r\n                                            list Menu\r\n                           </div>\r\n                                        <div className=\"mt-3\">\r\n                                            {send && send.map((item, index) =>\r\n                                                <>\r\n                                                    <div key={index} className=\"d-flex justify-content-center\">\r\n                                                        <div style={{ width: 300 }} className=\" d-flex justify-content-between\">\r\n                                                            <div>{item.name}</div>\r\n                                                            <div>Rp.{item.price?.toLocaleString('id-ID')} ({item.stock})</div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className=\"d-flex justify-content-start\">\r\n                                                        <div>Catatan :</div>&nbsp;<q style={{ fontWeight: 600 }} className=\"ml-1\">{item.catatan}\r\n                                                        </q>\r\n                                                    </div>\r\n                                                </>\r\n                                            )}\r\n                                            <div className=\"d-flex justify-content-center\">\r\n                                                <div style={{ width: 300 }} >----------------------------------------------------------</div>\r\n                                            </div>\r\n                                            <div className=\" d-flex justify-content-center\">\r\n                                                <div style={{ width: 300 }} className=\"d-flex justify-content-between pr-4\">\r\n                                                    <div>Total harga</div>\r\n                                                    <div>Rp.{addPlus()?.toLocaleString('id-ID')}</div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <Button style={{ display: send ? 'block' : 'none' }} onClick={() => ModalPrintnya()}>Selesai Cek</Button>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </Col>\r\n                    </Row>\r\n                    <Modal title={false} visible={modalPrint} footer={null} closable={false} onCancel={() => closeHandle()} style={{ borderRadius: \"10px\" }} id=\"p1\">\r\n                        <Fragment>\r\n                            <div className=\"page\" >\r\n                                <div className=\"mt-3\">\r\n                                    <div className=\"d-flex justify-content-center\">\r\n                                        <div style={{ width: 300 }}>\r\n                                            <div className=\"d-flex justify-content-between\">\r\n                                                <div>MSA Food</div>\r\n                                                <div>{notaDate(send[0]?.date_added)}</div>\r\n                                            </div>\r\n                                            <div>======================================</div>\r\n                                        </div>\r\n                                    </div>\r\n                                    {send && send.map((item, index) =>\r\n                                        <>\r\n                                            <div key={index} className=\"d-flex justify-content-center\">\r\n                                                <div style={{ width: 300 }} className=\" d-flex justify-content-between\">\r\n                                                    <div>{item.name}</div>\r\n                                                    <div>Rp.{item.price?.toLocaleString('id-ID')} ({item.stock})</div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"d-flex justify-content-center\">\r\n                                                <div className=\"d-flex justify-content-start\" style={{ width: 300 }}>\r\n                                                    <div>Catatan :</div>&nbsp;<q style={{ fontWeight: 600 }} className=\"ml-1\">{item.catatan}\r\n                                                    </q>\r\n                                                </div>\r\n                                            </div>\r\n                                        </>\r\n                                    )}\r\n                                    <div className=\"d-flex justify-content-center\">\r\n                                        <div style={{ width: 300 }} >----------------------------------------------------------</div>\r\n                                    </div>\r\n                                    <div className=\" d-flex justify-content-center\">\r\n                                        <div style={{ width: 300 }} className=\"d-flex justify-content-between pr-4\">\r\n                                            <div>Total harga</div>\r\n                                            <div>Rp.{addPlus()?.toLocaleString('id-ID')}</div>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    {/* <Button id=\"section-to-print\" onClick={() => printContent('p1')}>Print</Button> */}\r\n                                </div>\r\n                            </div>\r\n                        </Fragment>\r\n                    </Modal>\r\n                    {/* <img src={imageWelcome} style={{ width: \"100%\", maxWidth: 550, height: \"100%\", maxHeight: 200 }} /> */}\r\n                </div>\r\n            )\r\n        } else {\r\n            return (\r\n                <div>\r\n                    <Row>\r\n                        <Col xs={24}>\r\n                            <div className=\"mt-3 d-flex align-items-start\">\r\n                                <div style={{ display: send.image ? 'block' : 'none' }}>\r\n                                    <Image\r\n                                        width={300}\r\n                                        height={200}\r\n                                        style={{ borderRadius: 10 }}\r\n                                        src={send.image}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"ml-3\" >\r\n                                    <div style={{ fontSize: 35, fontWeight: 'bold' }}>\r\n                                        {send.name}\r\n                                    </div>\r\n                                    <div className=\"d-flex\" >\r\n\r\n                                    </div>\r\n                                    <div style={{ display: send.image ? 'block' : 'none', width: '100%', maxWidth: 300 }}>\r\n                                        <div className=\"d-flex\">\r\n                                            <div>\r\n                                                <a onClick={() => addCount()} className=\"Cart\" style={{ display: send.image ? 'block' : 'none' }} href>\r\n                                                    <FaArrowAltCircleUp style={{ fontSize: 25 }} />\r\n                                                </a>\r\n                                                <div className=\" d-flex justify-content-center mt-1\" style={{ fontSize: 25, width: '100%' }}>\r\n                                                    <div style={{ display: send.image ? 'block' : 'none', userSelect: 'none' }}>\r\n                                                        {countStock() < 0 ? 0 : countStock()}</div>\r\n                                                </div>\r\n                                                <a href onClick={() => setCount(qty - 1)} className=\"Cart\" style={{ display: send.image ? 'block' : 'none' }}>\r\n                                                    <FaArrowAltCircleDown style={{ fontSize: 25 }} />\r\n                                                </a>\r\n                                            </div>\r\n                                            <TextArea className=\"ml-3\" rows={3} value={catatan} placeholder=\"Tambahkan catatan disini\" style={{ borderRadius: 5 }} onChange={(e) => setCatatan(e.target.value)} />\r\n                                        </div>\r\n                                        <div className=\"d-flex justify-content-center mt-3\">\r\n                                            {pesanItem()}\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"d-flex justify-content-start\">\r\n                                {description(send.description)}\r\n                            </div>\r\n                        </Col>\r\n                    </Row>\r\n                    <Modal title={false} visible={setIsModalVisible} footer={null} closable={false} onCancel={() => handleCancel()} style={{ borderRadius: \"10px\" }} id=\"p1\">\r\n                        <Fragment>\r\n                            <div className=\"page\" id=\"p1\">\r\n                                <div className=\"text-center\">List Pesan</div>\r\n                                {product.cart.cart.map((item, index) =>\r\n                                    <div className=\"d-flex mt-3 row align-items-center\" key={index}>\r\n                                        <div className=\"col-10 d-flex justify-content-between\">\r\n                                            <div> {item.name} </div>\r\n                                            <div>\r\n                                                Rp.{Number(item.price).toLocaleString('id-ID')}*{item.qty}\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-2 justify-content-end\">\r\n                                            <Button style={{ background: '#66AFA9', border: 'none', borderRadius: 5, color: '#FFF' }} id=\"printPageButton\" className=\"btn-active\" onClick={() => dispatch(deleteCart(item.id))}>Hapus</Button>\r\n                                        </div>\r\n                                    </div>\r\n                                )}\r\n                                <div className=\"mt-3\">-------------------------------------------------------------------------------------------</div>\r\n                                <div className=\"d-flex justify-content-between\" style={{ paddingRight: 90 }}>\r\n                                    <div>\r\n                                        Jumlah:\r\n                </div>\r\n                                    <div>\r\n                                        Rp.{Number(product.cart.total).toLocaleString(\"id-ID\")}\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"mt-3 d-flex justify-content-center\" >\r\n                                    <Button style={{ background: '#66AFA9', border: 'none', borderRadius: 5, color: '#FFF', display: product.cart.total === 0 ? 'none' : 'block' }} onClick={() => order()}>Selesai Memesan</Button>\r\n                                </div>\r\n\r\n                                {/* <button id=\"printPageButton\" onClick={() => window.print()}>Print</button> */}\r\n                            </div>\r\n                        </Fragment>\r\n                    </Modal>\r\n                    {/* <img src={imageWelcome} style={{ width: \"100%\", maxWidth: 550, height: \"100%\", maxHeight: 200 }} /> */}\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n    let dataSendCart = { ...send, ...catatanData, qty }\r\n    const ButtonSend = (e) => {\r\n        dispatch(addCart(dataSendCart))\r\n\r\n        // arrayKosong.push(...dataSendCart, ...arrayKosong)\r\n        // console.log(arrayKosong, 'inikosong')\r\n        setCatatan('')\r\n        setCount(0)\r\n    }\r\n    // console.log(qty, dataSendCart, 'iniqty')\r\n    const countStock = () => {\r\n        return qty\r\n    }\r\n    const pesanItem = () => {\r\n        let existedCartData = product.cart.cart.find(product => product.id === send.id)\r\n        let notif = () => {\r\n            notification['warning']({\r\n                message: 'Tidak Bisa Memesan Menu Yang Sama',\r\n                description:\r\n                    'Silahkan ke pembayaran dan hapus menu ini untuk menambahkan atau menambah catatan',\r\n            });\r\n        }\r\n        if (existedCartData) {\r\n            if (existedCartData.name === send.name) {\r\n                return (\r\n                    <>\r\n                        <Button type=\"ghost\" ghost={false} style={{ color: '#000', width: 299, borderRadius: 10, fontWeight: 600 }} className=\"pesan-btn\" onClick={() => notif()} disabled={qty == 0 ? true : false}>PESAN</Button>\r\n                    </>\r\n                )\r\n            } else {\r\n                return (\r\n                    <>\r\n                        <Button type=\"ghost\" ghost={false} style={{ border: 'none', color: '#000', width: 299, borderRadius: 10, fontWeight: 'bold' }} className=\"pesan-btn\" onClick={() => ButtonSend()} disabled={qty == 0 ? true : false}>PESAN</Button>\r\n                    </>\r\n                )\r\n            }\r\n        } else {\r\n            return (\r\n                <>\r\n                    <Button type=\"ghost\" ghost={false} style={{ border: 'none', color: '#000', width: 299, borderRadius: 10, fontWeight: 'bold' }} className=\"pesan-btn\" onClick={() => ButtonSend()} disabled={qty == 0 ? true : false}>PESAN</Button>\r\n                </>\r\n            )\r\n        }\r\n    }\r\n    const parseJwt = (token) => {\r\n        let base64Url = token?.split('.')[1];\r\n        let base64 = base64Url?.replace(/-/g, '+').replace(/_/g, '/');\r\n        let jsonPayload = base64 ? decodeURIComponent(atob(base64).split('').map(function (c) {\r\n            return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\r\n        }).join('')) : null;\r\n\r\n        return JSON.parse(jsonPayload);\r\n    };\r\n    const JWT = sessionStorage.getItem(\"token\") != undefined ? parseJwt(sessionStorage.getItem(\"token\")).id : \"\"\r\n    const order = (e) => {\r\n        // e.preventDefault()\r\n        const products = product.cart.cart.map(item => {\r\n            return {\r\n                \"idUser\": JWT,\r\n                \"id\": item.id,\r\n                \"qty\": item.qty,\r\n                \"catatan\": item.catatan\r\n            }\r\n        })\r\n        const data = { products }\r\n        postData('/order', data).then(res => {\r\n            dispatch(addCart(\"Selesai\"))\r\n            handleCancel()\r\n            Swal.fire({\r\n                position: 'center',\r\n                icon: 'success',\r\n                title: 'Pesanan Sudah Terkirim di kasir',\r\n                showConfirmButton: false,\r\n                timer: 1500\r\n            })\r\n        }).catch(e => {\r\n            console.error('ini Error')\r\n        })\r\n    }\r\n    const description = (e) => {\r\n        const paragraph = e?.split(\"//\")\r\n        return (\r\n            <div className=\"mt-3\">\r\n                {paragraph && paragraph.map((item, index) =>\r\n                    <div key={index} style={{ fontSize: 18 }}>{item}</div>\r\n                )}\r\n            </div>\r\n        )\r\n    }\r\n    return (\r\n        <div className=\" pt-3 pb-5 pl-3 pr-3\" style={{ height: 'auto', borderRadius: 12, background: 'rgb(136 208 200 / 78%)' }}>\r\n            {productIsi()}\r\n        </div>\r\n    )\r\n})\r\n\r\nconst mapStateToProps = (state) => ({\r\n    product: state\r\n})\r\n\r\n\r\nexport default connect(mapStateToProps, { getProducts })(React.memo(Product));","E:\\posappku\\POSAPP_with_redux\\src\\Component\\Layout\\Navbar.js",["152","153","154","155"],"import React, { useEffect } from 'react'\r\nimport { connect, useDispatch } from 'react-redux';\r\nimport { Row, Col } from 'antd'\r\nimport { getUser } from '../../utils/getUser'\r\n\r\nconst NavbarPage = (props) => {\r\n    const dispatch = useDispatch()\r\n    useEffect(() => {\r\n        console.log(getUser(), 'iniget')\r\n    })\r\n    return (\r\n        <div style={{ backgroundColor: '#66AFA9', border: \"none\", height: 70 }}>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n// class NavbarPage extends Component {\r\n//     state = {\r\n//         count: parseInt(this.props.cart.length) || 0\r\n//     }\r\n\r\n//     onSubmit = async (id) => {\r\n//         const data = {\r\n//             idBuyer: parseInt(localStorage.getItem('id')),\r\n//             products: this.props.cart\r\n//         }\r\n//         // await this.props.dispatch(deleteCart())\r\n//         // console.log(\"saldas;d\", data)\r\n//         await this.props.dispatch(orderCheckout(data))\r\n//         await this.props.dispatch(deleteCart(id))\r\n//     }\r\n\r\n//     onLogout = async () => {\r\n//         localStorage.removeItem('user-id');\r\n//         localStorage.removeItem('token');\r\n//         localStorage.removeItem('isAuth');\r\n//         localStorage.removeItem('Status');\r\n//         if (localStorage.getItem('token') === undefined) {\r\n//             await this.props.history.push('/login');\r\n//         }\r\n//     }\r\n\r\n//     componentDidUpdate() {\r\n//         console.log(cobaman(), 'inihome')\r\n//     }\r\n//     render() {\r\n//         // console.log(this.props.cart.length === 1, \"dsakdasld\")\r\n\r\n//         const ValidasiFrom = () => {\r\n//             if (localStorage.getItem('Status') === '1') {\r\n//                 return (\r\n//                     <Fragment>\r\n//                         <Navbar.Brand className=\"text-white text-center\">Admin</Navbar.Brand>\r\n//                         <Link to=\"/settings\"><button style={{ backgroundColor: \"#3346A8\", border: \"none\" }}>\r\n//                             <img src={logocat} style={{ width: \"30px\", height: \"30px\" }} alt=\"admin\" /></button>\r\n//                         </Link>\r\n//                     </Fragment>\r\n//                 )\r\n//             }\r\n//             else if (localStorage.getItem('Status') === '2') {\r\n//                 return (\r\n//                     <Fragment>\r\n//                         <Navbar.Brand className=\"text-white text-center\">Cashier</Navbar.Brand>\r\n//                     </Fragment>\r\n//                 )\r\n//             }\r\n//             else {\r\n//                 return (\r\n//                     <Fragment></Fragment>\r\n//                 )\r\n//             }\r\n//         }\r\n\r\n//         const { cart, total } = this.props\r\n//         console.log(this.props)\r\n//         return (\r\n//             <div>\r\n//                 <button onClick></button>\r\n//             </div>\r\n//         )\r\n//     }\r\n// }\r\nconst mapStateToProps = (state) => {\r\n    // console.log(state)\r\n    return {\r\n        products: state.products.products,\r\n        categorys: state.categorys.categorys,\r\n        pagination: state.products.pagination,\r\n        cart: state.cart.cart,\r\n        total: state.cart.total\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (state) => {\r\n\r\n}\r\n\r\nexport default connect(mapStateToProps)(NavbarPage);","E:\\posappku\\POSAPP_with_redux\\src\\Component\\Layout\\loading.js",[],["156","157"],"E:\\posappku\\POSAPP_with_redux\\src\\Component\\redux\\actions\\carts.js",[],"E:\\posappku\\POSAPP_with_redux\\src\\Component\\redux\\actions\\Product.js",["158","159"],"import axios from 'axios';\r\nimport { GET_USERS, USERS_ERROR } from \"../types\";\r\n\r\nrequire('dotenv').config()\r\n\r\nexport const getProducts = () => async dispatch => {\r\n    try {\r\n        const authorization = localStorage.getItem('token');\r\n        const userId = localStorage.getItem(\"user-id\");\r\n        const res = await axios.get(`${process.env.REACT_APP_API_URL}/category`)\r\n        dispatch({\r\n            type: GET_USERS,\r\n            payload: res.data.result\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USERS_ERROR,\r\n            payload: console.log(error)\r\n        });\r\n    }\r\n    // return {\r\n    //     type: GET_USERS,\r\n    //     payload: axios({\r\n    //         method: \"GET\",\r\n    //         url: `${process.env.REACT_APP_API_URL}/pos`,\r\n    //         headers: {\r\n    //             \"authorization\": authorization,\r\n    //             \"user-id\": userId\r\n    //         }\r\n    //     })\r\n    // }\r\n}\r\n\r\nexport const postProducts = (data) => {\r\n    return {\r\n        type: 'CREATE_PRODUCTS',\r\n        payload: axios({\r\n            method: \"POST\",\r\n            url: `${process.env.REACT_APP_API_URL}/pos`,\r\n            data: data\r\n        })\r\n    }\r\n}\r\n\r\n// export const searchProduct = (name, idCategory, page) => {\r\n//     console.log(searchProduct)\r\n//     const authorization = localStorage.getItem('token');\r\n//     const userId = localStorage.getItem(\"user-id\");\r\n//     return {\r\n//         type: 'GET_SEARCHPRODUCTS',\r\n//         payload: axios({\r\n//             method: \"GET\",\r\n//             url: `${process.env.REACT_APP_API_URL}/pos?name=${name}&idCat=${idCategory}&orderBy=ASC`,\r\n//             headers: {\r\n//                 \"authorization\": authorization,\r\n//                 \"user-id\": userId\r\n//             }\r\n//         })\r\n//     }\r\n// }\r\nexport const sortProduct = (data) => {\r\n    const authorization = localStorage.getItem('token');\r\n    const userId = localStorage.getItem(\"user-id\");\r\n    return {\r\n        type: 'GET_SORTPRODUCTS',\r\n        payload: axios({\r\n            method: \"GET\",\r\n            url: `${process.env.REACT_APP_API_URL}/pos?idCat=${data}&orderBy=ASC`,\r\n            headers: {\r\n                \"authorization\": authorization,\r\n                \"user-id\": userId\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nexport const orderBy = (data) => {\r\n    return {\r\n        type: 'GET_ORDERPRODUCTS',\r\n        payload: axios({\r\n            method: \"GET\",\r\n            url: `${process.env.REACT_APP_API_URL}/pos?orderBy=${data}`\r\n        })\r\n    }\r\n}\r\n\r\nexport const deleteProducts = (productId) => {\r\n    return {\r\n        type: \"DELETE_PRODUCTS\",\r\n        payload: axios({\r\n            method: \"DELETE\",\r\n            url: `${process.env.REACT_APP_API_URL}/pos/${productId}`\r\n        })\r\n    }\r\n}\r\n\r\nexport const updateProduct = (idGet, data) => {\r\n    console.log(idGet)\r\n    return {\r\n        type: \"UPDATE_PRODUCTS\",\r\n        payload: axios({\r\n            method: \"PATCH\",\r\n            url: `${process.env.REACT_APP_API_URL}/pos/${idGet}`,\r\n            data: data\r\n        })\r\n    }\r\n}\r\n\r\nexport const paginationProduct = (page) => {\r\n    return {\r\n        type: 'PAGINATION',\r\n        payload: axios({\r\n            method: 'GET',\r\n            url: `${process.env.REACT_APP_API_URL}/pos?page=${page}`,\r\n        })\r\n    }\r\n}","E:\\posappku\\POSAPP_with_redux\\src\\Component\\redux\\reducers\\index.js",[],"E:\\posappku\\POSAPP_with_redux\\src\\Component\\redux\\actions\\Category.js",["160"],"import axios from 'axios';\r\n\r\nconst { REACT_APP_API_URL } = process.env\r\n\r\nexport const getCategory = () => {\r\n    const authorization = localStorage.getItem('token');\r\n    const userId = localStorage.getItem(\"user-id\");\r\n    return {\r\n        type: \"GET_CATEGORY\",\r\n        payload: axios({\r\n            method: \"GET\",\r\n            url: `${REACT_APP_API_URL}/category`,\r\n            headers: {\r\n                \"authorization\": authorization,\r\n                \"user-id\": userId\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nexport const searchCategory = (id) => {\r\n    return {\r\n        type: \"GET_SEARCHCATEGORY\",\r\n        payload: axios({\r\n            method: \"GET\",\r\n            url: `${REACT_APP_API_URL}/category/?name=${id}`\r\n        })\r\n    }\r\n}\r\n\r\nexport const postCategory = (data) => {\r\n    return {\r\n        type: \"POST_POSTCATEGORY\",\r\n        payload: axios({\r\n            method: \"POST\",\r\n            url: \"${REACT_APP_API_URL}/category\",\r\n            data: data\r\n        })\r\n    }\r\n}\r\n\r\nexport const deleteCategory = (categoryId) => {\r\n    return {\r\n        type: \"DELETE_CATEGORY\",\r\n        payload: axios({\r\n            method: \"DELETE\",\r\n            url: `${REACT_APP_API_URL}/category/${categoryId}`\r\n        })\r\n    }\r\n}\r\n\r\nexport const updateCategory = (idCategorys, data) => {\r\n    return {\r\n        type: \"UPDATE_CATEGORY\",\r\n        payload: axios({\r\n            method: \"PATCH\",\r\n            url: `${REACT_APP_API_URL}/category/${idCategorys}`,\r\n            data: data\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const sortCategory = (productId) => {\r\n    return {\r\n        type: \"GET_SORTPRODUCTS\",\r\n        payload: axios({\r\n            method: \"GET\",\r\n            url: `${REACT_APP_API_URL}/pos?id_category=${productId}`\r\n        })\r\n    }\r\n}","E:\\posappku\\POSAPP_with_redux\\src\\Component\\redux\\actions\\order.js",[],"E:\\posappku\\POSAPP_with_redux\\src\\Component\\redux\\actions\\user.js",[],"E:\\posappku\\POSAPP_with_redux\\src\\Component\\redux\\reducers\\Category.js",[],"E:\\posappku\\POSAPP_with_redux\\src\\Component\\redux\\reducers\\carts.js",["161","162"],"const initialState = {\r\n    cart: [],\r\n    total: 0\r\n}\r\n\r\nconst cart = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'ADD_CART':\r\n            if (action.payload === \"Selesai\") {\r\n                return {\r\n                    ...state,\r\n                    cart: [],\r\n                    total: 0\r\n                }\r\n            } else {\r\n                state.cart.push(action.payload)\r\n                let existedCartData = state.cart.find(product => product.id === action.payload.id)\r\n                let idDuplicate = state.cart.map(item => item.id)\r\n                let filtered = state.cart.filter((item, index) => !idDuplicate.includes(item.id, index + 1))\r\n                console.log(filtered, 'inifiltered')\r\n                let filterCartId = filtered.map(cart => {\r\n                    return cart.price * cart.qty\r\n                })\r\n                console.log(existedCartData, 'iniredux')\r\n\r\n                // @ts-ignore\r\n                const NumberData = filterCartId.map(item => parseInt(item))\r\n                var total = 0;\r\n\r\n                for (var i = 0; i < NumberData.length; ++i) {\r\n                    total += NumberData[i];\r\n                }\r\n                let price = action.payload.price * action.payload.qty\r\n                if (existedCartData) {\r\n                    return {\r\n                        ...state,\r\n                        cart: filtered,\r\n                        total: total\r\n                    }\r\n                }\r\n                else {\r\n                    let newTotal = state.total + action.payload.price\r\n                    action.payload.qty = 1\r\n                    return {\r\n                        ...state,\r\n                        // cart: [...state.cart, push],\r\n                        cart: filtered,\r\n                        total: total\r\n                    }\r\n                }\r\n            }\r\n        case 'ADD_QTY':\r\n            const addQty = state.cart.map(product => {\r\n                if (product.id === action.payload) {\r\n                    product.qty += 1\r\n                }\r\n                return product\r\n            })\r\n            let existedCartAdd = state.cart.find(product => product.id === action.payload)\r\n            if (existedCartAdd) {\r\n                return {\r\n                    ...state,\r\n                    cart: addQty,\r\n                    total: state.total + existedCartAdd.price\r\n                }\r\n            }\r\n        /* falls through */\r\n        case 'REDUCE_QTY':\r\n            const newQty = state.cart.map(cart => {\r\n                if (cart.id === action.payload) {\r\n                    cart.qty = cart.qty - 1\r\n                }\r\n                return cart\r\n            })\r\n            let existedCartReduce = state.cart.find(product => product.id === action.payload)\r\n            if (existedCartReduce.qty <= 0) {\r\n                existedCartReduce.qty = 1\r\n                return {\r\n                    ...state,\r\n                }\r\n            } else {\r\n                return {\r\n                    ...state,\r\n                    cart: newQty,\r\n                    total: state.total - existedCartReduce.price\r\n                }\r\n            }\r\n\r\n\r\n        case 'DELETE_CART_DATA':\r\n            const filterCartIdForDelete = state.cart.filter(product => product.id !== action.payload)\r\n            let existedCartDelete = state.cart.find(product => product.id === action.payload)\r\n            if (existedCartDelete) {\r\n                return {\r\n                    ...state,\r\n                    cart: filterCartIdForDelete,\r\n                    total: state.total - existedCartDelete.price * existedCartDelete.qty\r\n                }\r\n            }\r\n\r\n        /* falls through */\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default cart;","E:\\posappku\\POSAPP_with_redux\\src\\Component\\redux\\reducers\\auth.js",[],"E:\\posappku\\POSAPP_with_redux\\src\\Component\\redux\\reducers\\order.js",[],"E:\\posappku\\POSAPP_with_redux\\src\\Component\\redux\\reducers\\Product.js",["163"],"import { GET_USERS } from '../types'\r\n\r\nconst initialState = {\r\n    users: [],\r\n    loading: true\r\n}\r\n\r\nexport default function (state = initialState, action) {\r\n    switch (action.type) {\r\n        case GET_USERS:\r\n            return {\r\n                ...state,\r\n                users: action.payload,\r\n                loading: false\r\n            }\r\n        default: return state\r\n    }\r\n\r\n}","E:\\posappku\\POSAPP_with_redux\\src\\Component\\redux\\reducers\\user.js",[],"E:\\posappku\\POSAPP_with_redux\\src\\utils\\getUser.js",["164"],"import axios from 'axios'\r\n\r\nlet initialState = {}\r\n// @ts-ignore\r\nlet getToken = {}\r\n// @ts-ignore\r\nlet idDetailIn = {}\r\n\r\nconst { REACT_APP_API_URL } = process.env\r\n\r\nexport const getUser = () => {\r\n    // @ts-ignore\r\n    console.log(initialState, 'inin')\r\n    return initialState\r\n}\r\n\r\nexport const setUser = (params) => {\r\n    console.log(params)\r\n    // @ts-ignore\r\n    return initialState = params\r\n}\r\n\r\nexport const getData = (params) => {\r\n    return axios.get(`${REACT_APP_API_URL}${params}`)\r\n}\r\n\r\nexport const postData = (params, params1) => {\r\n    return axios.post(`${REACT_APP_API_URL}${params}`, params1)\r\n}\r\n\r\nexport const formatDate = (date) => {\r\n    const monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\r\n        \"July\", \"August\", \"September\", \"October\", \"November\", \"Desember\"\r\n    ];\r\n    var d = new Date(date),\r\n        month = '' + (monthNames[d.getMonth()]),\r\n        day = '' + d.getDate(),\r\n        year = d.getFullYear();\r\n\r\n    if (month.length < 2)\r\n        month = '0' + month;\r\n    if (day.length < 2)\r\n        day = '0' + day;\r\n    return [day, month, year].join(\" \");\r\n}\r\n\r\nexport const notaDate = (date) => {\r\n    const monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\r\n        \"July\", \"August\", \"September\", \"October\", \"November\", \"Desember\"\r\n    ];\r\n    var d = new Date(date),\r\n        month = '' + (monthNames[d.getMonth()]),\r\n        day = '' + d.getDate(),\r\n        year = d.getFullYear(),\r\n        hours = d.getHours(),\r\n        minute = d.getMinutes()\r\n\r\n    if (month.length < 2)\r\n        month = '0' + month;\r\n    if (day.length < 2)\r\n        day = '0' + day;\r\n    return [day, month, year].join(\" \") + \",\" + [hours, minute].join(\":\");\r\n}\r\n\r\nexport const resultIdDetail = (params) => {\r\n    return idDetailIn\r\n}\r\n\r\nexport const idDetail = (params) => {\r\n    return idDetailIn = params\r\n}","E:\\posappku\\POSAPP_with_redux\\src\\utils\\Management.js",[],["165","166"],"E:\\posappku\\POSAPP_with_redux\\src\\Component\\redux\\types.js",[],"E:\\posappku\\POSAPP_with_redux\\src\\Component\\Layout\\NavbarSlide.js",["167","168","169","170","171","172","173","174","175","176","177","178","179"],"E:\\posappku\\POSAPP_with_redux\\src\\Route.js",["180","181","182","183"],"E:\\posappku\\POSAPP_with_redux\\src\\Component\\Home\\Dashboard.js",["184","185"],"import React, { Fragment, useEffect, useState } from 'react'\r\nimport { Doughnut, Line, Bar } from 'react-chartjs-2';\r\nimport { getData } from '../../utils/getUser'\r\nimport { Tabs, Select } from 'antd'\r\nimport { withRouter } from 'react-router-dom'\r\n\r\nconst { Option } = Select\r\nconst { TabPane } = Tabs;\r\nconst Dashboard = () => {\r\n    const [dataChart, setDataChart] = useState({})\r\n    const [dataOrder, setOrder] = useState({})\r\n    const [dataOrderMonth, setOrderMonth] = useState({})\r\n    const [dataBulanan, setdataBulanan] = useState('')\r\n    const [filterBulanan, setfilterBulanan] = useState([])\r\n    const [itemProduk, setProduk] = useState([])\r\n    const [itemOrderAPI, setItemOrderAPi] = useState([])\r\n\r\n    const monthPrice = async (e) => {\r\n        const { data } = await getData('/order/sumpricemonth')\r\n\r\n        let filterIn = data.result.map(item => item.year)\r\n        setfilterBulanan([...new Set(filterIn)].reverse())\r\n        let Tanggal = [\"Januari\", \"Februari\", \"Maret\", \"April\", \"Mei\", \"Juni\", \"Juli\", \"Agustus\", \"September\", \"Oktober\", \"November\", \"Desember\"]\r\n        if (e) {\r\n            let filterYear = data.result.filter(item => String(item.year).includes(e))\r\n            let monthFilter = filterYear.map(item => Tanggal[item.month - 1])\r\n            let mapping = filterYear.map(item => String(item.Price))\r\n            console.log(monthFilter)\r\n            // setdataBulanan(filterYear)\r\n            setOrderMonth({\r\n                labels: monthFilter,\r\n                datasets: [\r\n                    {\r\n                        label: \"Total\",\r\n                        data: mapping,\r\n                        backgroundColor: [\"rgba(75, 192, 192, 0.6)\"],\r\n                        borderWidth: 4\r\n                    }\r\n                ]\r\n            });\r\n\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        monthPrice()\r\n        const orderAPi = async () => {\r\n            const { data } = await getData('/order/api')\r\n            setItemOrderAPi(data.result)\r\n        }\r\n        const produk = async () => {\r\n            const { data } = await getData('/pos')\r\n            setProduk(data.result)\r\n        }\r\n        const fetDataJualan = async () => {\r\n            let pricing = [];\r\n            let year = [];\r\n            getData('/order/sumprice').then(response => {\r\n                console.log(response)\r\n                for (const dataObj of response.data.result) {\r\n                    pricing.push(parseInt(dataObj.Price));\r\n                    year.push(parseInt(dataObj.year));\r\n                }\r\n                setOrder({\r\n                    labels: year,\r\n                    datasets: [\r\n                        {\r\n                            label: year,\r\n                            data: pricing,\r\n                            backgroundColor: [\"rgba(75, 192, 192, 0.6)\"],\r\n                            borderWidth: 4\r\n                        }\r\n                    ]\r\n                });\r\n            })\r\n            // console.log(data, 'indate')\r\n        }\r\n        const fetData = async () => {\r\n            const { data } = await getData('/user')\r\n            let status1 = data.result.filter(item => item.Status === 1)\r\n            let status2 = data.result.filter(item => item.Status === 2)\r\n            let status3 = data.result.filter(item => item.Status === 3)\r\n            let arrayUser = [status1.length, status2.length, status3.length]\r\n            console.log(status1, status2, status3)\r\n            setDataChart({\r\n                labels: [\"Kasir\", \"Pembeli\", \"Admin\"],\r\n                datasets: [{\r\n                    label: [\"Kasir\", \"Pembeli\", \"Admin\"],\r\n                    data: arrayUser,\r\n                    backgroundColor: [\r\n                        '#FF6384',\r\n                        '#36A2EB',\r\n                        '#FFCE56'\r\n                    ],\r\n                    hoverBackgroundColor: [\r\n                        '#FF6384',\r\n                        '#36A2EB',\r\n                        '#FFCE56'\r\n                    ]\r\n                }],\r\n                backgroundColor: \"rgba(220,220,220,1)\",\r\n            })\r\n        }\r\n        fetData()\r\n        orderAPi()\r\n        produk()\r\n        fetDataJualan()\r\n    }, [])\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className=\"d-flex justify-content-around\">\r\n                <Tabs defaultActiveKey=\"1\">\r\n                    <TabPane tab=\"User\" key=\"1\">\r\n                        <div className=\"mt-3\" style={{ width: 500, height: '100%', }}>\r\n                            <Doughnut data={dataChart} />\r\n                        </div>\r\n                    </TabPane>\r\n                    <TabPane tab=\"Rekap (Tahunan)\" key=\"2\">\r\n                        <div className=\"mt-3\" style={{ width: 500, height: '100%', }}>\r\n                            <Line data={dataOrder} />\r\n                        </div>\r\n                    </TabPane>\r\n                    <TabPane tab=\"Rekap (Bulanan)\" key=\"3\">\r\n                        <div className=\"d-flex justify-content-center \">\r\n                            <Select onChange={monthPrice} style={{ width: 200 }} placeholder=\"Tahun\">\r\n                                {filterBulanan && filterBulanan.map((item, index) =>\r\n                                    // <button key={index} onClick={() => monthPrice(item)} className=\"mr-2\">{item}</button>\r\n                                    <Option key={index} value={item}>{item}</Option>\r\n                                )}\r\n                            </Select>\r\n                        </div>\r\n                        <div className=\"mt-3\" style={{ width: 500, height: '100%', }}>\r\n                            <Bar data={dataOrderMonth} />\r\n                        </div>\r\n                    </TabPane>\r\n                </Tabs>\r\n\r\n\r\n                <div className=\"d-block\">\r\n                    <div style={{ background: '#303fc2', width: 230, height: 150, opacity: '50%', borderRadius: 10 }}>\r\n                        <div className=\"text-white p-2\" style={{ borderBottom: '1px solid white' }}>\r\n                            <div>Produk</div>\r\n                        </div>\r\n                        <div className=\"text-white ml-2\" style={{ fontSize: 80 }}>{itemProduk.length > 0 ? itemProduk.length : 0}<span style={{ fontSize: 15 }}>item</span></div>\r\n                    </div>\r\n                    <div className=\"mt-3\" style={{ background: '#303fc2', width: 230, height: 150, opacity: '50%', borderRadius: 10 }}>\r\n                        <div className=\"text-white p-2\" style={{ borderBottom: '1px solid white' }}>\r\n                            <div>Total Penjualan</div>\r\n                        </div>\r\n                        <div className=\"text-white ml-2\" style={{ fontSize: 80 }}>{itemOrderAPI.length > 0 ? itemOrderAPI.length : 0}</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default withRouter(Dashboard)","E:\\posappku\\POSAPP_with_redux\\src\\Component\\Home\\ProductAdministrator.js",["186","187","188","189","190"],"E:\\posappku\\POSAPP_with_redux\\src\\Component\\Layout\\ModalNew.js",["191","192","193","194","195","196","197","198","199"],{"ruleId":"200","replacedBy":"201"},{"ruleId":"202","replacedBy":"203"},{"ruleId":"204","severity":1,"message":"205","line":9,"column":10,"nodeType":"206","messageId":"207","endLine":9,"endColumn":22},{"ruleId":"204","severity":1,"message":"208","line":10,"column":8,"nodeType":"206","messageId":"207","endLine":10,"endColumn":15},{"ruleId":"204","severity":1,"message":"209","line":12,"column":10,"nodeType":"206","messageId":"207","endLine":12,"endColumn":17},{"ruleId":"204","severity":1,"message":"210","line":15,"column":10,"nodeType":"206","messageId":"207","endLine":15,"endColumn":18},{"ruleId":"204","severity":1,"message":"211","line":21,"column":9,"nodeType":"206","messageId":"207","endLine":21,"endColumn":20},{"ruleId":"204","severity":1,"message":"212","line":7,"column":10,"nodeType":"206","messageId":"207","endLine":7,"endColumn":20},{"ruleId":"204","severity":1,"message":"213","line":7,"column":22,"nodeType":"206","messageId":"207","endLine":7,"endColumn":30},{"ruleId":"200","replacedBy":"214"},{"ruleId":"202","replacedBy":"215"},{"ruleId":"204","severity":1,"message":"216","line":27,"column":15,"nodeType":"206","messageId":"207","endLine":27,"endColumn":20},{"ruleId":"217","severity":1,"message":"218","line":41,"column":8,"nodeType":"219","endLine":41,"endColumn":10,"suggestions":"220"},{"ruleId":"221","severity":1,"message":"222","line":280,"column":193,"nodeType":"223","messageId":"224","endLine":280,"endColumn":195},{"ruleId":"221","severity":1,"message":"222","line":286,"column":217,"nodeType":"223","messageId":"224","endLine":286,"endColumn":219},{"ruleId":"221","severity":1,"message":"222","line":293,"column":213,"nodeType":"223","messageId":"224","endLine":293,"endColumn":215},{"ruleId":"221","severity":1,"message":"225","line":307,"column":49,"nodeType":"223","messageId":"224","endLine":307,"endColumn":51},{"ruleId":"204","severity":1,"message":"226","line":3,"column":10,"nodeType":"206","messageId":"207","endLine":3,"endColumn":13},{"ruleId":"204","severity":1,"message":"227","line":3,"column":15,"nodeType":"206","messageId":"207","endLine":3,"endColumn":18},{"ruleId":"204","severity":1,"message":"228","line":7,"column":11,"nodeType":"206","messageId":"207","endLine":7,"endColumn":19},{"ruleId":"204","severity":1,"message":"229","line":95,"column":7,"nodeType":"206","messageId":"207","endLine":95,"endColumn":25},{"ruleId":"200","replacedBy":"230"},{"ruleId":"202","replacedBy":"231"},{"ruleId":"204","severity":1,"message":"232","line":8,"column":15,"nodeType":"206","messageId":"207","endLine":8,"endColumn":28},{"ruleId":"204","severity":1,"message":"233","line":9,"column":15,"nodeType":"206","messageId":"207","endLine":9,"endColumn":21},{"ruleId":"234","severity":1,"message":"235","line":36,"column":18,"nodeType":"236","messageId":"237","endLine":36,"endColumn":49},{"ruleId":"204","severity":1,"message":"238","line":33,"column":21,"nodeType":"206","messageId":"207","endLine":33,"endColumn":26},{"ruleId":"204","severity":1,"message":"239","line":42,"column":25,"nodeType":"206","messageId":"207","endLine":42,"endColumn":33},{"ruleId":"240","severity":1,"message":"241","line":8,"column":1,"nodeType":"242","endLine":19,"endColumn":2},{"ruleId":"204","severity":1,"message":"243","line":5,"column":5,"nodeType":"206","messageId":"207","endLine":5,"endColumn":13},{"ruleId":"200","replacedBy":"244"},{"ruleId":"202","replacedBy":"245"},{"ruleId":"204","severity":1,"message":"246","line":8,"column":8,"nodeType":"206","messageId":"207","endLine":8,"endColumn":9},{"ruleId":"204","severity":1,"message":"247","line":15,"column":12,"nodeType":"206","messageId":"207","endLine":15,"endColumn":17},{"ruleId":"204","severity":1,"message":"248","line":15,"column":19,"nodeType":"206","messageId":"207","endLine":15,"endColumn":27},{"ruleId":"204","severity":1,"message":"249","line":19,"column":15,"nodeType":"206","messageId":"207","endLine":19,"endColumn":21},{"ruleId":"250","severity":1,"message":"251","line":76,"column":41,"nodeType":"252","endLine":76,"endColumn":89},{"ruleId":"250","severity":1,"message":"251","line":107,"column":41,"nodeType":"252","endLine":107,"endColumn":89},{"ruleId":"253","severity":1,"message":"254","line":109,"column":49,"nodeType":"252","endLine":109,"endColumn":226},{"ruleId":"217","severity":1,"message":"255","line":139,"column":8,"nodeType":"219","endLine":139,"endColumn":22,"suggestions":"256"},{"ruleId":"217","severity":1,"message":"257","line":144,"column":8,"nodeType":"219","endLine":144,"endColumn":10,"suggestions":"258"},{"ruleId":"250","severity":1,"message":"251","line":168,"column":45,"nodeType":"252","endLine":168,"endColumn":90},{"ruleId":"250","severity":1,"message":"251","line":171,"column":45,"nodeType":"252","endLine":171,"endColumn":92},{"ruleId":"250","severity":1,"message":"251","line":174,"column":45,"nodeType":"252","endLine":174,"endColumn":92},{"ruleId":"250","severity":1,"message":"251","line":177,"column":45,"nodeType":"252","endLine":177,"endColumn":94},{"ruleId":"204","severity":1,"message":"259","line":1,"column":17,"nodeType":"206","messageId":"207","endLine":1,"endColumn":26},{"ruleId":"204","severity":1,"message":"260","line":1,"column":28,"nodeType":"206","messageId":"207","endLine":1,"endColumn":36},{"ruleId":"204","severity":1,"message":"261","line":3,"column":60,"nodeType":"206","messageId":"207","endLine":3,"endColumn":70},{"ruleId":"204","severity":1,"message":"262","line":10,"column":9,"nodeType":"206","messageId":"207","endLine":10,"endColumn":26},{"ruleId":"204","severity":1,"message":"263","line":13,"column":12,"nodeType":"206","messageId":"207","endLine":13,"endColumn":23},{"ruleId":"204","severity":1,"message":"264","line":13,"column":25,"nodeType":"206","messageId":"207","endLine":13,"endColumn":39},{"ruleId":"204","severity":1,"message":"265","line":1,"column":48,"nodeType":"206","messageId":"207","endLine":1,"endColumn":59},{"ruleId":"204","severity":1,"message":"266","line":8,"column":12,"nodeType":"206","messageId":"207","endLine":8,"endColumn":24},{"ruleId":"204","severity":1,"message":"267","line":8,"column":26,"nodeType":"206","messageId":"207","endLine":8,"endColumn":41},{"ruleId":"204","severity":1,"message":"247","line":10,"column":12,"nodeType":"206","messageId":"207","endLine":10,"endColumn":17},{"ruleId":"204","severity":1,"message":"248","line":10,"column":19,"nodeType":"206","messageId":"207","endLine":10,"endColumn":27},{"ruleId":"204","severity":1,"message":"268","line":1,"column":17,"nodeType":"206","messageId":"207","endLine":1,"endColumn":25},{"ruleId":"204","severity":1,"message":"265","line":1,"column":48,"nodeType":"206","messageId":"207","endLine":1,"endColumn":59},{"ruleId":"204","severity":1,"message":"269","line":2,"column":10,"nodeType":"206","messageId":"207","endLine":2,"endColumn":15},{"ruleId":"204","severity":1,"message":"270","line":8,"column":19,"nodeType":"206","messageId":"207","endLine":8,"endColumn":24},{"ruleId":"271","severity":1,"message":"272","line":93,"column":17,"nodeType":"273","messageId":"274","endLine":93,"endColumn":23},{"ruleId":"271","severity":1,"message":"272","line":102,"column":17,"nodeType":"273","messageId":"274","endLine":102,"endColumn":23},{"ruleId":"271","severity":1,"message":"272","line":112,"column":17,"nodeType":"273","messageId":"274","endLine":112,"endColumn":23},{"ruleId":"271","severity":1,"message":"272","line":115,"column":17,"nodeType":"273","messageId":"274","endLine":115,"endColumn":23},{"ruleId":"271","severity":1,"message":"272","line":175,"column":17,"nodeType":"273","messageId":"274","endLine":175,"endColumn":23},"no-native-reassign",["275"],"no-negated-in-lhs",["276"],"no-unused-vars","'notification' is defined but never used.","Identifier","unusedVar","'Product' is defined but never used.","'getData' is defined but never used.","'IdDetail' is assigned a value but never used.","'redirecting' is assigned a value but never used.","'withRouter' is defined but never used.","'Redirect' is defined but never used.",["275"],["276"],"'split' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'NameUser' and 'getOut'. Either include them or remove the dependency array.","ArrayExpression",["277"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","'Row' is defined but never used.","'Col' is defined but never used.","'dispatch' is assigned a value but never used.","'mapDispatchToProps' is assigned a value but never used.",["275"],["276"],"'authorization' is assigned a value but never used.","'userId' is assigned a value but never used.","no-template-curly-in-string","Unexpected template string expression.","Literal","unexpectedTemplateExpression","'price' is assigned a value but never used.","'newTotal' is assigned a value but never used.","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","'getToken' is assigned a value but never used.",["275"],["276"],"'_' is defined but never used.","'query' is assigned a value but never used.","'setQuery' is assigned a value but never used.","'result' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","React Hook useCallback has a missing dependency: 'history'. Either include it or remove the dependency array.",["278"],"React Hook useEffect has missing dependencies: 'NameUser' and 'getDataProduct'. Either include them or remove the dependency array.",["279"],"'useEffect' is defined but never used.","'useState' is defined but never used.","'useHistory' is defined but never used.","'REACT_APP_API_URL' is assigned a value but never used.","'dataBulanan' is assigned a value but never used.","'setdataBulanan' is assigned a value but never used.","'useCallback' is defined but never used.","'searchProduk' is assigned a value but never used.","'setSearchProduk' is assigned a value but never used.","'Fragment' is defined but never used.","'Modal' is defined but never used.","'modal' is assigned a value but never used.","no-unreachable","Unreachable code.","BreakStatement","unreachableCode","no-global-assign","no-unsafe-negation",{"desc":"280","fix":"281"},{"desc":"282","fix":"283"},{"desc":"284","fix":"285"},"Update the dependencies array to be: [NameUser, getOut]",{"range":"286","text":"287"},"Update the dependencies array to be: [history]",{"range":"288","text":"289"},"Update the dependencies array to be: [NameUser, getDataProduct]",{"range":"290","text":"291"},[1561,1563],"[NameUser, getOut]",[6971,6985],"[history]",[7066,7068],"[NameUser, getDataProduct]"]