[{"E:\\posappku\\POSAPP_with_redux\\src\\index.js":"1","E:\\posappku\\POSAPP_with_redux\\src\\App.js":"2","E:\\posappku\\POSAPP_with_redux\\src\\serviceWorker.js":"3","E:\\posappku\\POSAPP_with_redux\\src\\Component\\redux\\store.js":"4","E:\\posappku\\POSAPP_with_redux\\src\\Component\\auth\\Login.js":"5","E:\\posappku\\POSAPP_with_redux\\src\\Component\\Home\\Home.js":"6","E:\\posappku\\POSAPP_with_redux\\src\\Component\\Layout\\Product.js":"7","E:\\posappku\\POSAPP_with_redux\\src\\Component\\Layout\\Navbar.js":"8","E:\\posappku\\POSAPP_with_redux\\src\\Component\\redux\\actions\\carts.js":"9","E:\\posappku\\POSAPP_with_redux\\src\\Component\\redux\\actions\\Product.js":"10","E:\\posappku\\POSAPP_with_redux\\src\\Component\\redux\\reducers\\index.js":"11","E:\\posappku\\POSAPP_with_redux\\src\\Component\\redux\\actions\\Category.js":"12","E:\\posappku\\POSAPP_with_redux\\src\\Component\\redux\\actions\\order.js":"13","E:\\posappku\\POSAPP_with_redux\\src\\Component\\redux\\actions\\user.js":"14","E:\\posappku\\POSAPP_with_redux\\src\\Component\\redux\\reducers\\Category.js":"15","E:\\posappku\\POSAPP_with_redux\\src\\Component\\redux\\reducers\\carts.js":"16","E:\\posappku\\POSAPP_with_redux\\src\\Component\\redux\\reducers\\auth.js":"17","E:\\posappku\\POSAPP_with_redux\\src\\Component\\redux\\reducers\\order.js":"18","E:\\posappku\\POSAPP_with_redux\\src\\Component\\redux\\reducers\\Product.js":"19","E:\\posappku\\POSAPP_with_redux\\src\\Component\\redux\\reducers\\user.js":"20","E:\\posappku\\POSAPP_with_redux\\src\\utils\\getUser.js":"21","E:\\posappku\\POSAPP_with_redux\\src\\utils\\Management.js":"22","E:\\posappku\\POSAPP_with_redux\\src\\Component\\redux\\types.js":"23","E:\\posappku\\POSAPP_with_redux\\src\\Component\\Layout\\NavbarSlide.js":"24","E:\\posappku\\POSAPP_with_redux\\src\\Route.js":"25","E:\\posappku\\POSAPP_with_redux\\src\\Component\\Home\\Dashboard.js":"26","E:\\posappku\\POSAPP_with_redux\\src\\Component\\Home\\ProductAdministrator.js":"27","E:\\posappku\\POSAPP_with_redux\\src\\Component\\Layout\\ModalNew.js":"28"},{"size":512,"mtime":1610620126847,"results":"29","hashOfConfig":"30"},{"size":1456,"mtime":1612857324724,"results":"31","hashOfConfig":"30"},{"size":5212,"mtime":1612676362312,"results":"32","hashOfConfig":"30"},{"size":382,"mtime":1610607434386,"results":"33","hashOfConfig":"30"},{"size":5484,"mtime":1613214252750,"results":"34","hashOfConfig":"30"},{"size":14002,"mtime":1613058433378,"results":"35","hashOfConfig":"30"},{"size":18991,"mtime":1612773443128,"results":"36","hashOfConfig":"30"},{"size":3212,"mtime":1612451705676,"results":"37","hashOfConfig":"30"},{"size":449,"mtime":1610592988221,"results":"38","hashOfConfig":"30"},{"size":3295,"mtime":1610609558228,"results":"39","hashOfConfig":"30"},{"size":346,"mtime":1610592988224,"results":"40","hashOfConfig":"30"},{"size":1753,"mtime":1610600956916,"results":"41","hashOfConfig":"30"},{"size":761,"mtime":1610592988221,"results":"42","hashOfConfig":"30"},{"size":946,"mtime":1610592988222,"results":"43","hashOfConfig":"30"},{"size":2607,"mtime":1610592988222,"results":"44","hashOfConfig":"30"},{"size":3815,"mtime":1610809140908,"results":"45","hashOfConfig":"30"},{"size":690,"mtime":1610592988223,"results":"46","hashOfConfig":"30"},{"size":1455,"mtime":1610810959400,"results":"47","hashOfConfig":"30"},{"size":392,"mtime":1610608575941,"results":"48","hashOfConfig":"30"},{"size":1906,"mtime":1610592988226,"results":"49","hashOfConfig":"30"},{"size":2109,"mtime":1613214373053,"results":"50","hashOfConfig":"30"},{"size":123,"mtime":1610603583290,"results":"51","hashOfConfig":"52"},{"size":79,"mtime":1610608374788,"results":"53","hashOfConfig":"30"},{"size":10513,"mtime":1613057253199,"results":"54","hashOfConfig":"30"},{"size":1813,"mtime":1611013505267,"results":"55","hashOfConfig":"52"},{"size":6931,"mtime":1612707712068,"results":"56","hashOfConfig":"30"},{"size":5424,"mtime":1613057647342,"results":"57","hashOfConfig":"30"},{"size":9709,"mtime":1613052614290,"results":"58","hashOfConfig":"30"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},"1t3vd2f",{"filePath":"62","messages":"63","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"61"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"61"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"61"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"61"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"61"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"90"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"61"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"61"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"61"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},"14ef3x2",{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"61"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"123","messages":"124","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"61"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"61"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"61"},"E:\\posappku\\POSAPP_with_redux\\src\\index.js",[],["132","133"],"E:\\posappku\\POSAPP_with_redux\\src\\App.js",["134","135","136","137","138"],"import React, { useEffect, useState } from 'react';\r\nimport './App.css';\r\nimport { BrowserRouter as Router, Switch, Route, Redirect } from 'react-router-dom'\r\nimport Home from '../src/Component/Home/Home'\r\nimport { Provider } from 'react-redux'\r\nimport store from './Component/redux/store'\r\nimport { createBrowserHistory } from 'history'\r\nimport Login from '../src/Component/auth/Login'\r\nimport { notification } from 'antd'\r\nimport Product from '../src/Component/Layout/Product'\r\nimport 'antd/dist/antd.css';\r\nimport { getData } from './utils/getUser'\r\n\r\nfunction App(props) {\r\n  const [IdDetail, setIdDetail] = useState()\r\n\r\n\r\n  useEffect(() => {\r\n  }, [])\r\n  const history = createBrowserHistory()\r\n  const redirecting = () => {\r\n    if (!sessionStorage.getItem('token') || sessionStorage.getItem('token') === undefined || sessionStorage.getItem('token') === \"undefined\" || sessionStorage.getItem('token') === null) {\r\n      return (\r\n        <Redirect path=\"/\" to={\"/login\"} />\r\n      )\r\n    }\r\n  }\r\n  return (\r\n    <Provider store={store}>\r\n      <Router\r\n        // @ts-ignore\r\n        history={history}>\r\n        <Switch>\r\n          <Route path=\"/login\" component={Login} />\r\n          <Route path=\"/\" component={Home} setIdDetail={setIdDetail} />\r\n        </Switch>\r\n        {/* {redirecting()} */}\r\n        {sessionStorage.getItem(\"ID\") ? null : <Redirect from='/' to=\"/login\" />}\r\n      </Router>\r\n    </Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","E:\\posappku\\POSAPP_with_redux\\src\\serviceWorker.js",[],"E:\\posappku\\POSAPP_with_redux\\src\\Component\\redux\\store.js",[],"E:\\posappku\\POSAPP_with_redux\\src\\Component\\auth\\Login.js",["139","140"],"import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport background from '../../assets/user.png'\r\nimport './login.css'\r\nimport { notification } from 'antd'\r\nimport { idDetail } from '../../utils/getUser'\r\nimport { withRouter, Redirect } from 'react-router-dom'\r\n\r\nclass Login extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            email: '',\r\n            password: '',\r\n            Loading: false\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n    }\r\n\r\n    onChange = (e) => {\r\n        this.setState({ [e.target.name]: e.target.value })\r\n    }\r\n\r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.setState({\r\n            Loading: true\r\n        })\r\n        const data = {\r\n            email: this.state.email,\r\n            password: this.state.password\r\n        }\r\n        const { REACT_APP_API_URL } = process.env\r\n        axios\r\n            .post(`${REACT_APP_API_URL}/user/login`, data)\r\n            .then(res => {\r\n                console.log(res, 'inires')\r\n                if (res.data.status === 400) {\r\n                    notification['error']({\r\n                        message: res.data.message\r\n                    });\r\n                    this.props.history.push('/login')\r\n                } else {\r\n                    let Mounted = true\r\n                    sessionStorage.setItem('token', res.data.token);\r\n                    sessionStorage.setItem('ID', res.data.id);\r\n                    idDetail(res.data.id)\r\n                    this.setState({\r\n                        Loading: false\r\n                    })\r\n                    if (Mounted) {\r\n\r\n                        this.props.history.push('/');\r\n                    }\r\n                }\r\n            })\r\n            .catch(err => {\r\n                // console.log(err.message, 'inierror')\r\n                notification['error']({\r\n                    message: err.message\r\n                });\r\n                this.props.history.push('/login')\r\n                this.setState({\r\n                    Loading: false\r\n                })\r\n            }).finally(e => {\r\n                console.log(e, 'inie')\r\n                this.setState({\r\n                    Loading: false\r\n                })\r\n            })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container-fluid login-bg\">\r\n                <div className=\"d-flex align-items-center justify-content-center\" style={{ height: '100vh' }}>\r\n                    <div style={{ backgroundColor: 'white', padding: 50, borderRadius: 10, justifyContent: 'center', alignItems: 'center', height: 'auto', width: '100%', maxWidth: 400, boxShadow: '1px 0px 13px 5px inset rgba(0, 0, 0, 0.75)' }}>\r\n                        <div style={{ justifyContent: 'center ', alignContent: 'center', flex: 0, display: 'flex ', padding: 10, marginTop: -30 }}>\r\n                            <div style={{\r\n                                backgroundColor: '#a6a6b7', padding: 20, borderRadius\r\n                                    : 100, marginBottom: 20\r\n                            }}>\r\n                                <img alt=\"profile\" src={background} style={{ width: 80, height: 80 }} />\r\n                            </div>\r\n                        </div>\r\n                        <div style={{ justifyContent: 'center', alignItems: 'center', display: 'flex' }}>\r\n                            <h4>Selamat Datang di Cash Sir</h4>\r\n                        </div>\r\n                        <div style={{ top: 50 }}>\r\n                            <div className=\"d-flex justify-content-center\">\r\n                                <form onSubmit={this.onSubmit} >\r\n                                    <div className=\"form-group\">\r\n                                        {/* <label>Email</label> */}\r\n                                        <input type=\"email\" className=\"form-control\" placeholder=\"Enter email\" name=\"email\" onChange={this.onChange} style={{ width: \"300px\" }} required />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        {/* <label>Password</label> */}\r\n                                        <input type=\"password\" className=\"form-control\" id=\"password-field\" placeholder=\"Enter password\" name=\"password\" onChange={this.onChange} style={{ width: \"300px\" }} required />\r\n                                    </div>\r\n                                    <button type=\"submit\" className=\"btn text-white btn-active\" style={{ width: \"300px\", background: 'rgb(112 169 164)' }}>{this.state.Loading ? <div><div className=\"spinner-border text-white\" style={{ width: 20, height: 20 }}></div></div> : \"Login\"}</button>\r\n                                </form>\r\n                            </div>\r\n                            <div style={{ marginTop: 30, marginBottom: -50, justifyContent: 'center', alignItems: 'center', display: 'flex' }}>\r\n                                <p>Versi 2.00</p>\r\n                            </div>\r\n                            <div style={{ marginTop: 30, marginBottom: -50, justifyContent: 'center', alignItems: 'center', display: 'flex' }}>\r\n                                <p style={{ fontSize: 12, marginTop: 5 }}>&#169;2020 Cash Sir</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Login;","E:\\posappku\\POSAPP_with_redux\\src\\Component\\Home\\Home.js",[],"E:\\posappku\\POSAPP_with_redux\\src\\Component\\Layout\\Product.js",["141","142","143","144","145","146"],"// @ts-nocheck\r\nimport React, { useEffect, useState, Fragment, useCallback } from 'react'\r\nimport { getProducts } from '../redux/actions/Product'\r\nimport { addCart, deleteCart } from '../redux/actions/carts'\r\nimport { useDispatch } from 'react-redux'\r\nimport { connect } from 'react-redux'\r\nimport { postData, getData, notaDate } from '../../utils/getUser'\r\nimport { FaArrowAltCircleUp, FaArrowAltCircleDown } from 'react-icons/fa'\r\nimport Swal from 'sweetalert2'\r\nimport { useHistory } from 'react-router-dom'\r\n// import ModalPembayaran from './Modal'\r\n// import imageWelcome from '../../assets/10808.jpg'\r\nimport { Image, Row, Col, Button, Input, Modal, notification } from 'antd'\r\nimport './style.css'\r\n\r\nconst { TextArea } = Input\r\nconst Product = React.memo((props) => {\r\n    const [catatan, setCatatan] = useState('')\r\n    const [qty, setCount] = useState(0);\r\n    const [nameUserNya, setNameUser] = useState([])\r\n    const [modalPrint, setModalPrint] = useState(false)\r\n    const history = useHistory()\r\n    const dispatch = useDispatch()\r\n\r\n    const NameUser = async () => {\r\n        const pathname = history.location.pathname\r\n        const split = pathname.split('/')\r\n        const result = sessionStorage.getItem('ID')\r\n        const { data } = await getData(`/user?detail=${result}`)\r\n        const resultData = data.result\r\n        setNameUser(resultData)\r\n    }\r\n    const getOut = () => {\r\n        if (!sessionStorage) {\r\n            history.push('/login')\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        getOut()\r\n        NameUser()\r\n    }, [])\r\n    const ModalPrintnya = () => {\r\n        setModalPrint(true)\r\n    }\r\n    const closeHandle = () => {\r\n        setModalPrint(false)\r\n    }\r\n    const { send, product, setIsModalVisible, handleCancel } = props\r\n    const catatanData = {\r\n        catatan\r\n    }\r\n\r\n    const addPlus = () => {\r\n        if (nameUserNya?.Status === 1) {\r\n            if (send) {\r\n                const arrayPlus = send?.map((item) => item.price)\r\n                const reducer = (accumulator, currentValue) => accumulator + currentValue;\r\n                // console.log(arrayPlus.reduce(reducer))\r\n                return arrayPlus.reduce(reducer)\r\n            }\r\n        }\r\n    }\r\n    // const printContent = (el) => {\r\n    //     console.log(el, 'ininins')\r\n    //     var restorepage = document.body.innerHTML;\r\n    //     var printcontent = document.getElementById(el).innerHTML;\r\n    //     // document.body.innerHTML = printcontent;\r\n    //     window.print();\r\n    //     // document.body.innerHTML = restorepage;\r\n    // }\r\n\r\n\r\n    const addCount = useCallback(() => {\r\n        setCount(() => qty + 1)\r\n    }, [qty])\r\n    console.log(nameUserNya, 'ininiend')\r\n    const productIsi = () => {\r\n        if (nameUserNya?.Status === 1) {\r\n            return (\r\n                <div>\r\n                    <Row>\r\n                        <Col xs={24}>\r\n                            <div className=\"d-flex justify-content-center\">\r\n                                <div style={{ width: 300 }}>\r\n                                    <div style={{ display: send.length > 0 ? 'block' : 'none' }}>\r\n                                        <div className=\"text-center\">\r\n                                            list Menu\r\n                           </div>\r\n                                        <div className=\"mt-3\">\r\n                                            {send && send.map((item, index) =>\r\n                                                <>\r\n                                                    <div key={index} className=\"d-flex justify-content-center\">\r\n                                                        <div style={{ width: 300 }} className=\" d-flex justify-content-between\">\r\n                                                            <div>{item.name}</div>\r\n                                                            <div>Rp.{item.price?.toLocaleString('id-ID')} ({item.stock})</div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className=\"d-flex justify-content-start\">\r\n                                                        <div>Catatan :</div>&nbsp;<q style={{ fontWeight: 600 }} className=\"ml-1\">{item.catatan}\r\n                                                        </q>\r\n                                                    </div>\r\n                                                </>\r\n                                            )}\r\n                                            <div className=\"d-flex justify-content-center\">\r\n                                                <div style={{ width: 300 }} >----------------------------------------------------------</div>\r\n                                            </div>\r\n                                            <div className=\" d-flex justify-content-center\">\r\n                                                <div style={{ width: 300 }} className=\"d-flex justify-content-between pr-4\">\r\n                                                    <div>Total harga</div>\r\n                                                    <div>Rp.{addPlus()?.toLocaleString('id-ID')}</div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <Button style={{ display: send ? 'block' : 'none' }} onClick={() => ModalPrintnya()}>Selesai Cek</Button>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </Col>\r\n                    </Row>\r\n                    <Modal title={false} visible={modalPrint} footer={null} closable={false} onCancel={() => closeHandle()} style={{ borderRadius: \"10px\" }} id=\"p1\">\r\n                        <Fragment>\r\n                            <div className=\"page\" >\r\n                                <div className=\"mt-3\">\r\n                                    <div className=\"d-flex justify-content-center\">\r\n                                        <div style={{ width: 300 }}>\r\n                                            <div className=\"d-flex justify-content-between\">\r\n                                                <div>MSA Food</div>\r\n                                                <div>{notaDate(send[0]?.date_added)}</div>\r\n                                            </div>\r\n                                            <div>======================================</div>\r\n                                        </div>\r\n                                    </div>\r\n                                    {send && send.map((item, index) =>\r\n                                        <>\r\n                                            <div key={index} className=\"d-flex justify-content-center\">\r\n                                                <div style={{ width: 300 }} className=\" d-flex justify-content-between\">\r\n                                                    <div>{item.name}</div>\r\n                                                    <div>Rp.{item.price?.toLocaleString('id-ID')} ({item.stock})</div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"d-flex justify-content-center\">\r\n                                                <div className=\"d-flex justify-content-start\" style={{ width: 300 }}>\r\n                                                    <div>Catatan :</div>&nbsp;<q style={{ fontWeight: 600 }} className=\"ml-1\">{item.catatan}\r\n                                                    </q>\r\n                                                </div>\r\n                                            </div>\r\n                                        </>\r\n                                    )}\r\n                                    <div className=\"d-flex justify-content-center\">\r\n                                        <div style={{ width: 300 }} >----------------------------------------------------------</div>\r\n                                    </div>\r\n                                    <div className=\" d-flex justify-content-center\">\r\n                                        <div style={{ width: 300 }} className=\"d-flex justify-content-between pr-4\">\r\n                                            <div>Total harga</div>\r\n                                            <div>Rp.{addPlus()?.toLocaleString('id-ID')}</div>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    {/* <Button id=\"section-to-print\" onClick={() => printContent('p1')}>Print</Button> */}\r\n                                </div>\r\n                            </div>\r\n                        </Fragment>\r\n                    </Modal>\r\n                    {/* <img src={imageWelcome} style={{ width: \"100%\", maxWidth: 550, height: \"100%\", maxHeight: 200 }} /> */}\r\n                </div>\r\n            )\r\n        } else {\r\n            return (\r\n                <div>\r\n                    <Row>\r\n                        <Col xs={24}>\r\n                            <div className=\"mt-3 d-flex align-items-start\">\r\n                                <div style={{ display: send.image ? 'block' : 'none' }}>\r\n                                    <Image\r\n                                        width={300}\r\n                                        height={200}\r\n                                        style={{ borderRadius: 10 }}\r\n                                        src={send.image}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"ml-3\" >\r\n                                    <div style={{ fontSize: 35, fontWeight: 'bold' }}>\r\n                                        {send.name}\r\n                                    </div>\r\n                                    <div className=\"d-flex\" >\r\n\r\n                                    </div>\r\n                                    <div style={{ display: send.image ? 'block' : 'none', width: '100%', maxWidth: 300 }}>\r\n                                        <div className=\"d-flex\">\r\n                                            <div>\r\n                                                <a onClick={() => addCount()} className=\"Cart\" style={{ display: send.image ? 'block' : 'none' }} href>\r\n                                                    <FaArrowAltCircleUp style={{ fontSize: 25 }} />\r\n                                                </a>\r\n                                                <div className=\" d-flex justify-content-center mt-1\" style={{ fontSize: 25, width: '100%' }}>\r\n                                                    <div style={{ display: send.image ? 'block' : 'none', userSelect: 'none' }}>\r\n                                                        {countStock() < 0 ? 0 : countStock()}</div>\r\n                                                </div>\r\n                                                <a href onClick={() => setCount(qty - 1)} className=\"Cart\" style={{ display: send.image ? 'block' : 'none' }}>\r\n                                                    <FaArrowAltCircleDown style={{ fontSize: 25 }} />\r\n                                                </a>\r\n                                            </div>\r\n                                            <TextArea className=\"ml-3\" rows={3} value={catatan} placeholder=\"Tambahkan catatan disini\" style={{ borderRadius: 5 }} onChange={(e) => setCatatan(e.target.value)} />\r\n                                        </div>\r\n                                        <div className=\"d-flex justify-content-center mt-3\">\r\n                                            {pesanItem()}\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"d-flex justify-content-start\">\r\n                                {description(send.description)}\r\n                            </div>\r\n                        </Col>\r\n                    </Row>\r\n                    <Modal title={false} visible={setIsModalVisible} footer={null} closable={false} onCancel={() => handleCancel()} style={{ borderRadius: \"10px\" }} id=\"p1\">\r\n                        <Fragment>\r\n                            <div className=\"page\" id=\"p1\">\r\n                                <div className=\"text-center\">List Pesan</div>\r\n                                {product.cart.cart.map((item, index) =>\r\n                                    <div className=\"d-flex mt-3 row align-items-center\" key={index}>\r\n                                        <div className=\"col-10 d-flex justify-content-between\">\r\n                                            <div> {item.name} </div>\r\n                                            <div>\r\n                                                Rp.{Number(item.price).toLocaleString('id-ID')}*{item.qty}\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-2 justify-content-end\">\r\n                                            <Button style={{ background: '#66AFA9', border: 'none', borderRadius: 5, color: '#FFF' }} id=\"printPageButton\" className=\"btn-active\" onClick={() => dispatch(deleteCart(item.id))}>Hapus</Button>\r\n                                        </div>\r\n                                    </div>\r\n                                )}\r\n                                <div className=\"mt-3\">-------------------------------------------------------------------------------------------</div>\r\n                                <div className=\"d-flex justify-content-between\" style={{ paddingRight: 90 }}>\r\n                                    <div>\r\n                                        Jumlah:\r\n                </div>\r\n                                    <div>\r\n                                        Rp.{Number(product.cart.total).toLocaleString(\"id-ID\")}\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"mt-3 d-flex justify-content-center\" >\r\n                                    <Button style={{ background: '#66AFA9', border: 'none', borderRadius: 5, color: '#FFF', display: product.cart.total === 0 ? 'none' : 'block' }} onClick={() => order()}>Selesai Memesan</Button>\r\n                                </div>\r\n\r\n                                {/* <button id=\"printPageButton\" onClick={() => window.print()}>Print</button> */}\r\n                            </div>\r\n                        </Fragment>\r\n                    </Modal>\r\n                    {/* <img src={imageWelcome} style={{ width: \"100%\", maxWidth: 550, height: \"100%\", maxHeight: 200 }} /> */}\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n    let dataSendCart = { ...send, ...catatanData, qty }\r\n    const ButtonSend = (e) => {\r\n        dispatch(addCart(dataSendCart))\r\n\r\n        // arrayKosong.push(...dataSendCart, ...arrayKosong)\r\n        // console.log(arrayKosong, 'inikosong')\r\n        setCatatan('')\r\n        setCount(0)\r\n    }\r\n    // console.log(qty, dataSendCart, 'iniqty')\r\n    const countStock = () => {\r\n        return qty\r\n    }\r\n    const pesanItem = () => {\r\n        let existedCartData = product.cart.cart.find(product => product.id === send.id)\r\n        let notif = () => {\r\n            notification['warning']({\r\n                message: 'Tidak Bisa Memesan Menu Yang Sama',\r\n                description:\r\n                    'Silahkan ke pembayaran dan hapus menu ini untuk menambahkan atau menambah catatan',\r\n            });\r\n        }\r\n        if (existedCartData) {\r\n            if (existedCartData.name === send.name) {\r\n                return (\r\n                    <>\r\n                        <Button type=\"ghost\" ghost={false} style={{ color: '#000', width: 299, borderRadius: 10, fontWeight: 600 }} className=\"pesan-btn\" onClick={() => notif()} disabled={qty == 0 ? true : false}>PESAN</Button>\r\n                    </>\r\n                )\r\n            } else {\r\n                return (\r\n                    <>\r\n                        <Button type=\"ghost\" ghost={false} style={{ border: 'none', color: '#000', width: 299, borderRadius: 10, fontWeight: 'bold' }} className=\"pesan-btn\" onClick={() => ButtonSend()} disabled={qty == 0 ? true : false}>PESAN</Button>\r\n                    </>\r\n                )\r\n            }\r\n        } else {\r\n            return (\r\n                <>\r\n                    <Button type=\"ghost\" ghost={false} style={{ border: 'none', color: '#000', width: 299, borderRadius: 10, fontWeight: 'bold' }} className=\"pesan-btn\" onClick={() => ButtonSend()} disabled={qty == 0 ? true : false}>PESAN</Button>\r\n                </>\r\n            )\r\n        }\r\n    }\r\n    const parseJwt = (token) => {\r\n        let base64Url = token?.split('.')[1];\r\n        let base64 = base64Url?.replace(/-/g, '+').replace(/_/g, '/');\r\n        let jsonPayload = base64 ? decodeURIComponent(atob(base64).split('').map(function (c) {\r\n            return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\r\n        }).join('')) : null;\r\n\r\n        return JSON.parse(jsonPayload);\r\n    };\r\n    const JWT = sessionStorage.getItem(\"token\") != undefined ? parseJwt(sessionStorage.getItem(\"token\")).id : \"\"\r\n    const order = (e) => {\r\n        // e.preventDefault()\r\n        const products = product.cart.cart.map(item => {\r\n            return {\r\n                \"idUser\": JWT,\r\n                \"id\": item.id,\r\n                \"qty\": item.qty,\r\n                \"catatan\": item.catatan\r\n            }\r\n        })\r\n        const data = { products }\r\n        postData('/order', data).then(res => {\r\n            dispatch(addCart(\"Selesai\"))\r\n            handleCancel()\r\n            Swal.fire({\r\n                position: 'center',\r\n                icon: 'success',\r\n                title: 'Pesanan Sudah Terkirim di kasir',\r\n                showConfirmButton: false,\r\n                timer: 1500\r\n            })\r\n        }).catch(e => {\r\n            console.error('ini Error')\r\n        })\r\n    }\r\n    const description = (e) => {\r\n        const paragraph = e?.split(\"//\")\r\n        return (\r\n            <div className=\"mt-3\">\r\n                {paragraph && paragraph.map((item, index) =>\r\n                    <div key={index} style={{ fontSize: 18 }}>{item}</div>\r\n                )}\r\n            </div>\r\n        )\r\n    }\r\n    return (\r\n        <div className=\" pt-3 pb-5 pl-3 pr-3\" style={{ height: 'auto', borderRadius: 12, background: 'rgb(136 208 200 / 78%)' }}>\r\n            {productIsi()}\r\n        </div>\r\n    )\r\n})\r\n\r\nconst mapStateToProps = (state) => ({\r\n    product: state\r\n})\r\n\r\n\r\nexport default connect(mapStateToProps, { getProducts })(React.memo(Product));","E:\\posappku\\POSAPP_with_redux\\src\\Component\\Layout\\Navbar.js",["147","148","149","150"],"import React, { useEffect } from 'react'\r\nimport { connect, useDispatch } from 'react-redux';\r\nimport { Row, Col } from 'antd'\r\nimport { getUser } from '../../utils/getUser'\r\n\r\nconst NavbarPage = (props) => {\r\n    const dispatch = useDispatch()\r\n    useEffect(() => {\r\n        console.log(getUser(), 'iniget')\r\n    })\r\n    return (\r\n        <div style={{ backgroundColor: '#66AFA9', border: \"none\", height: 70 }}>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n// class NavbarPage extends Component {\r\n//     state = {\r\n//         count: parseInt(this.props.cart.length) || 0\r\n//     }\r\n\r\n//     onSubmit = async (id) => {\r\n//         const data = {\r\n//             idBuyer: parseInt(localStorage.getItem('id')),\r\n//             products: this.props.cart\r\n//         }\r\n//         // await this.props.dispatch(deleteCart())\r\n//         // console.log(\"saldas;d\", data)\r\n//         await this.props.dispatch(orderCheckout(data))\r\n//         await this.props.dispatch(deleteCart(id))\r\n//     }\r\n\r\n//     onLogout = async () => {\r\n//         localStorage.removeItem('user-id');\r\n//         localStorage.removeItem('token');\r\n//         localStorage.removeItem('isAuth');\r\n//         localStorage.removeItem('Status');\r\n//         if (localStorage.getItem('token') === undefined) {\r\n//             await this.props.history.push('/login');\r\n//         }\r\n//     }\r\n\r\n//     componentDidUpdate() {\r\n//         console.log(cobaman(), 'inihome')\r\n//     }\r\n//     render() {\r\n//         // console.log(this.props.cart.length === 1, \"dsakdasld\")\r\n\r\n//         const ValidasiFrom = () => {\r\n//             if (localStorage.getItem('Status') === '1') {\r\n//                 return (\r\n//                     <Fragment>\r\n//                         <Navbar.Brand className=\"text-white text-center\">Admin</Navbar.Brand>\r\n//                         <Link to=\"/settings\"><button style={{ backgroundColor: \"#3346A8\", border: \"none\" }}>\r\n//                             <img src={logocat} style={{ width: \"30px\", height: \"30px\" }} alt=\"admin\" /></button>\r\n//                         </Link>\r\n//                     </Fragment>\r\n//                 )\r\n//             }\r\n//             else if (localStorage.getItem('Status') === '2') {\r\n//                 return (\r\n//                     <Fragment>\r\n//                         <Navbar.Brand className=\"text-white text-center\">Cashier</Navbar.Brand>\r\n//                     </Fragment>\r\n//                 )\r\n//             }\r\n//             else {\r\n//                 return (\r\n//                     <Fragment></Fragment>\r\n//                 )\r\n//             }\r\n//         }\r\n\r\n//         const { cart, total } = this.props\r\n//         console.log(this.props)\r\n//         return (\r\n//             <div>\r\n//                 <button onClick></button>\r\n//             </div>\r\n//         )\r\n//     }\r\n// }\r\nconst mapStateToProps = (state) => {\r\n    // console.log(state)\r\n    return {\r\n        products: state.products.products,\r\n        categorys: state.categorys.categorys,\r\n        pagination: state.products.pagination,\r\n        cart: state.cart.cart,\r\n        total: state.cart.total\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (state) => {\r\n\r\n}\r\n\r\nexport default connect(mapStateToProps)(NavbarPage);","E:\\posappku\\POSAPP_with_redux\\src\\Component\\redux\\actions\\carts.js",[],"E:\\posappku\\POSAPP_with_redux\\src\\Component\\redux\\actions\\Product.js",["151","152"],"import axios from 'axios';\r\nimport { GET_USERS, USERS_ERROR } from \"../types\";\r\n\r\nrequire('dotenv').config()\r\n\r\nexport const getProducts = () => async dispatch => {\r\n    try {\r\n        const authorization = localStorage.getItem('token');\r\n        const userId = localStorage.getItem(\"user-id\");\r\n        const res = await axios.get(`${process.env.REACT_APP_API_URL}/category`)\r\n        dispatch({\r\n            type: GET_USERS,\r\n            payload: res.data.result\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USERS_ERROR,\r\n            payload: console.log(error)\r\n        });\r\n    }\r\n    // return {\r\n    //     type: GET_USERS,\r\n    //     payload: axios({\r\n    //         method: \"GET\",\r\n    //         url: `${process.env.REACT_APP_API_URL}/pos`,\r\n    //         headers: {\r\n    //             \"authorization\": authorization,\r\n    //             \"user-id\": userId\r\n    //         }\r\n    //     })\r\n    // }\r\n}\r\n\r\nexport const postProducts = (data) => {\r\n    return {\r\n        type: 'CREATE_PRODUCTS',\r\n        payload: axios({\r\n            method: \"POST\",\r\n            url: `${process.env.REACT_APP_API_URL}/pos`,\r\n            data: data\r\n        })\r\n    }\r\n}\r\n\r\n// export const searchProduct = (name, idCategory, page) => {\r\n//     console.log(searchProduct)\r\n//     const authorization = localStorage.getItem('token');\r\n//     const userId = localStorage.getItem(\"user-id\");\r\n//     return {\r\n//         type: 'GET_SEARCHPRODUCTS',\r\n//         payload: axios({\r\n//             method: \"GET\",\r\n//             url: `${process.env.REACT_APP_API_URL}/pos?name=${name}&idCat=${idCategory}&orderBy=ASC`,\r\n//             headers: {\r\n//                 \"authorization\": authorization,\r\n//                 \"user-id\": userId\r\n//             }\r\n//         })\r\n//     }\r\n// }\r\nexport const sortProduct = (data) => {\r\n    const authorization = localStorage.getItem('token');\r\n    const userId = localStorage.getItem(\"user-id\");\r\n    return {\r\n        type: 'GET_SORTPRODUCTS',\r\n        payload: axios({\r\n            method: \"GET\",\r\n            url: `${process.env.REACT_APP_API_URL}/pos?idCat=${data}&orderBy=ASC`,\r\n            headers: {\r\n                \"authorization\": authorization,\r\n                \"user-id\": userId\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nexport const orderBy = (data) => {\r\n    return {\r\n        type: 'GET_ORDERPRODUCTS',\r\n        payload: axios({\r\n            method: \"GET\",\r\n            url: `${process.env.REACT_APP_API_URL}/pos?orderBy=${data}`\r\n        })\r\n    }\r\n}\r\n\r\nexport const deleteProducts = (productId) => {\r\n    return {\r\n        type: \"DELETE_PRODUCTS\",\r\n        payload: axios({\r\n            method: \"DELETE\",\r\n            url: `${process.env.REACT_APP_API_URL}/pos/${productId}`\r\n        })\r\n    }\r\n}\r\n\r\nexport const updateProduct = (idGet, data) => {\r\n    console.log(idGet)\r\n    return {\r\n        type: \"UPDATE_PRODUCTS\",\r\n        payload: axios({\r\n            method: \"PATCH\",\r\n            url: `${process.env.REACT_APP_API_URL}/pos/${idGet}`,\r\n            data: data\r\n        })\r\n    }\r\n}\r\n\r\nexport const paginationProduct = (page) => {\r\n    return {\r\n        type: 'PAGINATION',\r\n        payload: axios({\r\n            method: 'GET',\r\n            url: `${process.env.REACT_APP_API_URL}/pos?page=${page}`,\r\n        })\r\n    }\r\n}","E:\\posappku\\POSAPP_with_redux\\src\\Component\\redux\\reducers\\index.js",[],"E:\\posappku\\POSAPP_with_redux\\src\\Component\\redux\\actions\\Category.js",["153"],"import axios from 'axios';\r\n\r\nconst { REACT_APP_API_URL } = process.env\r\n\r\nexport const getCategory = () => {\r\n    const authorization = localStorage.getItem('token');\r\n    const userId = localStorage.getItem(\"user-id\");\r\n    return {\r\n        type: \"GET_CATEGORY\",\r\n        payload: axios({\r\n            method: \"GET\",\r\n            url: `${REACT_APP_API_URL}/category`,\r\n            headers: {\r\n                \"authorization\": authorization,\r\n                \"user-id\": userId\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nexport const searchCategory = (id) => {\r\n    return {\r\n        type: \"GET_SEARCHCATEGORY\",\r\n        payload: axios({\r\n            method: \"GET\",\r\n            url: `${REACT_APP_API_URL}/category/?name=${id}`\r\n        })\r\n    }\r\n}\r\n\r\nexport const postCategory = (data) => {\r\n    return {\r\n        type: \"POST_POSTCATEGORY\",\r\n        payload: axios({\r\n            method: \"POST\",\r\n            url: \"${REACT_APP_API_URL}/category\",\r\n            data: data\r\n        })\r\n    }\r\n}\r\n\r\nexport const deleteCategory = (categoryId) => {\r\n    return {\r\n        type: \"DELETE_CATEGORY\",\r\n        payload: axios({\r\n            method: \"DELETE\",\r\n            url: `${REACT_APP_API_URL}/category/${categoryId}`\r\n        })\r\n    }\r\n}\r\n\r\nexport const updateCategory = (idCategorys, data) => {\r\n    return {\r\n        type: \"UPDATE_CATEGORY\",\r\n        payload: axios({\r\n            method: \"PATCH\",\r\n            url: `${REACT_APP_API_URL}/category/${idCategorys}`,\r\n            data: data\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const sortCategory = (productId) => {\r\n    return {\r\n        type: \"GET_SORTPRODUCTS\",\r\n        payload: axios({\r\n            method: \"GET\",\r\n            url: `${REACT_APP_API_URL}/pos?id_category=${productId}`\r\n        })\r\n    }\r\n}",["154","155"],"E:\\posappku\\POSAPP_with_redux\\src\\Component\\redux\\actions\\order.js",[],"E:\\posappku\\POSAPP_with_redux\\src\\Component\\redux\\actions\\user.js",[],"E:\\posappku\\POSAPP_with_redux\\src\\Component\\redux\\reducers\\Category.js",[],"E:\\posappku\\POSAPP_with_redux\\src\\Component\\redux\\reducers\\carts.js",["156","157"],"const initialState = {\r\n    cart: [],\r\n    total: 0\r\n}\r\n\r\nconst cart = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'ADD_CART':\r\n            if (action.payload === \"Selesai\") {\r\n                return {\r\n                    ...state,\r\n                    cart: [],\r\n                    total: 0\r\n                }\r\n            } else {\r\n                state.cart.push(action.payload)\r\n                let existedCartData = state.cart.find(product => product.id === action.payload.id)\r\n                let idDuplicate = state.cart.map(item => item.id)\r\n                let filtered = state.cart.filter((item, index) => !idDuplicate.includes(item.id, index + 1))\r\n                console.log(filtered, 'inifiltered')\r\n                let filterCartId = filtered.map(cart => {\r\n                    return cart.price * cart.qty\r\n                })\r\n                console.log(existedCartData, 'iniredux')\r\n\r\n                // @ts-ignore\r\n                const NumberData = filterCartId.map(item => parseInt(item))\r\n                var total = 0;\r\n\r\n                for (var i = 0; i < NumberData.length; ++i) {\r\n                    total += NumberData[i];\r\n                }\r\n                let price = action.payload.price * action.payload.qty\r\n                if (existedCartData) {\r\n                    return {\r\n                        ...state,\r\n                        cart: filtered,\r\n                        total: total\r\n                    }\r\n                }\r\n                else {\r\n                    let newTotal = state.total + action.payload.price\r\n                    action.payload.qty = 1\r\n                    return {\r\n                        ...state,\r\n                        // cart: [...state.cart, push],\r\n                        cart: filtered,\r\n                        total: total\r\n                    }\r\n                }\r\n            }\r\n        case 'ADD_QTY':\r\n            const addQty = state.cart.map(product => {\r\n                if (product.id === action.payload) {\r\n                    product.qty += 1\r\n                }\r\n                return product\r\n            })\r\n            let existedCartAdd = state.cart.find(product => product.id === action.payload)\r\n            if (existedCartAdd) {\r\n                return {\r\n                    ...state,\r\n                    cart: addQty,\r\n                    total: state.total + existedCartAdd.price\r\n                }\r\n            }\r\n        /* falls through */\r\n        case 'REDUCE_QTY':\r\n            const newQty = state.cart.map(cart => {\r\n                if (cart.id === action.payload) {\r\n                    cart.qty = cart.qty - 1\r\n                }\r\n                return cart\r\n            })\r\n            let existedCartReduce = state.cart.find(product => product.id === action.payload)\r\n            if (existedCartReduce.qty <= 0) {\r\n                existedCartReduce.qty = 1\r\n                return {\r\n                    ...state,\r\n                }\r\n            } else {\r\n                return {\r\n                    ...state,\r\n                    cart: newQty,\r\n                    total: state.total - existedCartReduce.price\r\n                }\r\n            }\r\n\r\n\r\n        case 'DELETE_CART_DATA':\r\n            const filterCartIdForDelete = state.cart.filter(product => product.id !== action.payload)\r\n            let existedCartDelete = state.cart.find(product => product.id === action.payload)\r\n            if (existedCartDelete) {\r\n                return {\r\n                    ...state,\r\n                    cart: filterCartIdForDelete,\r\n                    total: state.total - existedCartDelete.price * existedCartDelete.qty\r\n                }\r\n            }\r\n\r\n        /* falls through */\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default cart;","E:\\posappku\\POSAPP_with_redux\\src\\Component\\redux\\reducers\\auth.js",[],"E:\\posappku\\POSAPP_with_redux\\src\\Component\\redux\\reducers\\order.js",[],["158","159"],"E:\\posappku\\POSAPP_with_redux\\src\\Component\\redux\\reducers\\Product.js",["160"],"import { GET_USERS } from '../types'\r\n\r\nconst initialState = {\r\n    users: [],\r\n    loading: true\r\n}\r\n\r\nexport default function (state = initialState, action) {\r\n    switch (action.type) {\r\n        case GET_USERS:\r\n            return {\r\n                ...state,\r\n                users: action.payload,\r\n                loading: false\r\n            }\r\n        default: return state\r\n    }\r\n\r\n}","E:\\posappku\\POSAPP_with_redux\\src\\Component\\redux\\reducers\\user.js",[],"E:\\posappku\\POSAPP_with_redux\\src\\utils\\getUser.js",["161"],"import axios from 'axios'\r\n\r\nlet initialState = {}\r\n// @ts-ignore\r\nlet getToken = {}\r\n// @ts-ignore\r\nlet idDetailIn = {}\r\n\r\nconst { REACT_APP_API_URL } = process.env\r\n\r\nexport const getUser = () => {\r\n    // @ts-ignore\r\n    console.log(initialState, 'inin')\r\n    return initialState\r\n}\r\n\r\nexport const setUser = (params) => {\r\n    console.log(params)\r\n    // @ts-ignore\r\n    return initialState = params\r\n}\r\n\r\nexport const getData = (params) => {\r\n    return axios.get(`${REACT_APP_API_URL}${params}`)\r\n}\r\n\r\nexport const postData = (params, params1) => {\r\n    return axios.post(`${REACT_APP_API_URL}${params}`, params1)\r\n}\r\n\r\nexport const updateData = (params, params1) => {\r\n    return axios.patch(`${REACT_APP_API_URL}${params}`, params1)\r\n}\r\n\r\nexport const deleteData = (params, params1) => {\r\n    return axios.delete(`${REACT_APP_API_URL}${params}`)\r\n}\r\n\r\nexport const formatDate = (date) => {\r\n    const monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\r\n        \"July\", \"August\", \"September\", \"October\", \"November\", \"Desember\"\r\n    ];\r\n    var d = new Date(date),\r\n        month = '' + (monthNames[d.getMonth()]),\r\n        day = '' + d.getDate(),\r\n        year = d.getFullYear();\r\n\r\n    if (month.length < 2)\r\n        month = '0' + month;\r\n    if (day.length < 2)\r\n        day = '0' + day;\r\n    return [day, month, year].join(\" \");\r\n}\r\n\r\nexport const notaDate = (date) => {\r\n    const monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\r\n        \"July\", \"August\", \"September\", \"October\", \"November\", \"Desember\"\r\n    ];\r\n    var d = new Date(date),\r\n        month = '' + (monthNames[d.getMonth()]),\r\n        day = '' + d.getDate(),\r\n        year = d.getFullYear(),\r\n        hours = d.getHours(),\r\n        minute = d.getMinutes()\r\n\r\n    if (month.length < 2)\r\n        month = '0' + month;\r\n    if (day.length < 2)\r\n        day = '0' + day;\r\n    return [day, month, year].join(\" \") + \",\" + [hours, minute].join(\":\");\r\n}\r\n\r\nexport const resultIdDetail = (params) => {\r\n    return idDetailIn\r\n}\r\n\r\nexport const idDetail = (params) => {\r\n    return idDetailIn = params\r\n}","E:\\posappku\\POSAPP_with_redux\\src\\utils\\Management.js",[],["162","163"],"E:\\posappku\\POSAPP_with_redux\\src\\Component\\redux\\types.js",[],"E:\\posappku\\POSAPP_with_redux\\src\\Component\\Layout\\NavbarSlide.js",["164","165","166","167","168","169","170","171","172","173","174","175","176"],"// @ts-nocheck\r\nimport React, { Fragment, useCallback, useEffect, useState } from 'react'\r\nimport { useHistory, withRouter } from 'react-router-dom'\r\nimport { getData, formatDate } from '../../utils/getUser'\r\nimport { Input, Button, Dropdown, Menu } from 'antd'\r\nimport { AiOutlineSearch } from 'react-icons/ai'\r\nimport { FaSort } from 'react-icons/fa'\r\nimport _ from 'lodash'\r\nimport './style.css'\r\n\r\nconst NavbarIn = (props) => {\r\n    const history = useHistory()\r\n    const [nameUserNya, setNameUser] = useState()\r\n    const [prodcutItems, setProductItems] = useState([])\r\n    const [query, setQuery] = useState(false)\r\n    const NameUser = async () => {\r\n        const pathname = history.location.pathname\r\n        const split = pathname.split('/')\r\n        const result = split[split.length - 1]\r\n        const { data } = await getData(`/user?detail=` + sessionStorage.getItem('ID'))\r\n        setNameUser(data.result)\r\n    }\r\n    const itemDetail = async (e) => {\r\n        console.log(e, 'ininnameUserNya')\r\n        const datas = await getData('/user?detail=' + sessionStorage.getItem('ID'))\r\n        const statusUser = datas.data.result.Status\r\n        if (statusUser === 1) {\r\n            const { data } = await getData('/order/' + e.idBuyer)\r\n            // setDetailOrderIn(data.result)\r\n            props.ChildItem(data.result)\r\n        } else {\r\n            props.ChildItem(e)\r\n        }\r\n    }\r\n    const enterSearch = (e) => {\r\n        const { event } = e\r\n        const filtered = prodcutItems.filter(item => String(item.name).toLowerCase().includes(String(event).toLowerCase()))\r\n        console.log(filtered, 'inienter')\r\n        setProductItems(filtered)\r\n    }\r\n    const sort = async (e) => {\r\n        // let data = []\r\n        const { sort } = e\r\n        const { data } = await getData(`/pos?urutkan=${sort}`)\r\n        switch (sort) {\r\n            case \"Makanan\":\r\n                setProductItems(data.result)\r\n                break;\r\n            case \"Minuman\":\r\n                setProductItems(data.result)\r\n                break;\r\n            case \"urutkanAZ\":\r\n                const sortAZ = prodcutItems.sort((a, b) => a.name - b.name)\r\n                console.log(sortAZ)\r\n                setProductItems(sortAZ)\r\n                break;\r\n            case \"Semua\":\r\n                getDataProduct()\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    const listItemNya = () => {\r\n        if (nameUserNya?.Status === 1) {\r\n            return (\r\n                <div style={{ height: \"100%\", overflowY: 'scroll' }} className=\"listProduct\">\r\n                    <div >\r\n                        {prodcutItems.length === 0 ? (\r\n                            <div className=\"p-3\">\r\n                                <div className=\"text-center\">Menu Tidak Tersedia</div>\r\n                            </div>\r\n                        ) : (\r\n                                <>\r\n                                    {prodcutItems && prodcutItems.map((item, index) =>\r\n                                        <a key={index} onClick={() => itemDetail(item)}>\r\n                                            <div style={{ backgroundColor: 'rgb(138 191 187)', width: '100%' }} className=\"bg-product d-flex align-items-start p-2\">\r\n                                                {/* <img src={item.image ? item.image : \"https://cdn.pixabay.com/photo/2015/10/05/22/37/blank-profile-picture-973460_1280.png\"} style={{ width: 50, height: 50, borderRadius: 5 }} /> */}\r\n                                                <div className=\"ml-3\">\r\n                                                    <div>#MSA{String(item.idBuyer).substring(0, 8)}</div>\r\n                                                    <div className=\"mt-2\">\r\n                                                        <div>Total Harga Rp.{parseInt(item.totalPayment).toLocaleString(\"id-ID\")}</div>\r\n                                                        <div className=\"d-flex justify-content-between align-items-center\" style={{ width: 230 }}>\r\n                                                            <div>{formatDate(item.date_added)}</div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </a>\r\n                                    )}\r\n                                </>\r\n                            )}\r\n                    </div>\r\n                </div>\r\n            )\r\n        } else {\r\n            return (\r\n                <div style={{ maxHeight: 505, height: \"100%\", overflowY: 'scroll' }} className=\"listProduct\">\r\n                    <div >\r\n                        {prodcutItems.length === 0 ? (\r\n                            <div className=\"p-3\">\r\n                                <div className=\"text-center\">Menu Tidak Tersedia</div>\r\n                            </div>\r\n                        ) : (\r\n                                <>\r\n                                    {prodcutItems && prodcutItems.map((item, index) =>\r\n                                        <a key={index} onClick={() => itemDetail(item)}>\r\n                                            <div style={{ backgroundColor: 'rgb(138 191 187)', width: '100%' }} className=\"bg-product d-flex align-items-center p-2\">\r\n                                                <img src={item.image ? item.image : \"https://cdn.pixabay.com/photo/2015/10/05/22/37/blank-profile-picture-973460_1280.png\"} style={{ width: 50, height: 50, borderRadius: 5 }} />\r\n                                                <div className=\"ml-3\">\r\n                                                    <div>{item.name}</div>\r\n                                                    <div>Harga Rp.{parseInt(item.price).toLocaleString(\"id-ID\")}</div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </a>\r\n                                    )}\r\n                                </>\r\n                            )}\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n    const getDataProduct = useCallback(async () => {\r\n        if (sessionStorage.getItem('ID')) {\r\n            const datas = await getData('/user?detail=' + sessionStorage.getItem('ID'))\r\n            const statusUser = datas?.data?.result?.Status\r\n            if (statusUser === 1) {\r\n                const status1 = await getData('/order/api')\r\n                setProductItems(status1.data.result.sort((a, b) => a.date_added - b.date_added))\r\n            } else {\r\n                const { data } = await getData('/pos')\r\n                console.log(data, 'iniwoi')\r\n                setProductItems(data.result)\r\n            }\r\n        } else {\r\n            history.push('/login')\r\n        }\r\n    }, [prodcutItems])\r\n\r\n    useEffect(() => {\r\n        NameUser()\r\n        getDataProduct()\r\n    }, [])\r\n    const SearchButton = () => {\r\n        if (nameUserNya?.Status === 1) {\r\n            return (\r\n                <div style={{ background: 'rgb(112 169 164)', width: \"100%\", maxHeight: 50 }} className=\"d-flex justify-content-center align-items-center p-3\">\r\n                    <div style={{ background: 'rgb(112 169 164)' }} className=\"d-flex align-items-center\">\r\n                        <Button style={{ borderRadius: 5, width: 200 }} onClick={() => getDataProduct()}>Refresh</Button>\r\n                    </div>\r\n                </div>\r\n            )\r\n        } else {\r\n            return (\r\n                <div style={{ background: 'rgb(112 169 164)', width: \"100%\", maxHeight: 50 }} className=\"d-flex align-items-center justify-content-center\">\r\n                    <div style={{ background: 'rgb(112 169 164)' }} className=\"d-flex align-items-center justify-content-between\">\r\n                        <div className=\"p-1\">\r\n                            <AiOutlineSearch style={{ fontSize: 18, color: '#FFF' }} />\r\n                        </div>\r\n                        <Input style={{ width: 182, border: 'none' }} placeholder=\"Cari Disini\" className=\"input-search\" onChange={(e) => !e.target.value && getDataProduct()} onPressEnter={(e) => enterSearch({ event: e.target.value })} />\r\n                        <div className=\"d-flex\">\r\n                            <Dropdown\r\n                                // @ts-ignore\r\n                                trigger={'click'} overlay={(\r\n                                    <Menu>\r\n                                        <Menu.Item>\r\n                                            <a onClick={() => sort({ \"sort\": \"Semua\" })}>Tampilkan Semua</a>\r\n                                        </Menu.Item>\r\n                                        <Menu.Item>\r\n                                            <a onClick={() => sort({ \"sort\": \"Makanan\" })}>Makanan</a>\r\n                                        </Menu.Item>\r\n                                        <Menu.Item>\r\n                                            <a onClick={() => sort({ \"sort\": \"Minuman\" })}>Minuman</a>\r\n                                        </Menu.Item>\r\n                                        <Menu.Item>\r\n                                            <a onClick={() => sort({ \"sort\": \"urutkanAZ\" })}>Urutkan A-Z</a>\r\n                                        </Menu.Item>\r\n                                    </Menu>)}>\r\n                                <Button ghost={false} style={{ border: 'none', boxShadow: 'none', background: 'rgb(112 169 164)' }} className=\"button-icon\">\r\n                                    <FaSort style={{ color: \"#FFF\" }} />\r\n                                </Button>\r\n                            </Dropdown>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n    return (\r\n        <Fragment>\r\n            <div style={{ width: \"100%\", height: 'auto' }} className=\"listProduct-bg\" >\r\n                <div style={{ background: 'rgb(112 169 164)', width: \"100%\", maxHeight: 50 }} className=\"d-flex align-items-center justify-content-between p-3\">\r\n                    {SearchButton()}\r\n                </div>\r\n                <div style={{ height: '69vh', background: '#70A9A4' }}>\r\n                    {listItemNya()}\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default withRouter(NavbarIn)","E:\\posappku\\POSAPP_with_redux\\src\\Route.js",["177","178","179","180"],"E:\\posappku\\POSAPP_with_redux\\src\\Component\\Home\\Dashboard.js",["181","182"],"import React, { Fragment, useEffect, useState } from 'react'\r\nimport { Doughnut, Line, Bar } from 'react-chartjs-2';\r\nimport { getData } from '../../utils/getUser'\r\nimport { Tabs, Select } from 'antd'\r\nimport { withRouter } from 'react-router-dom'\r\n\r\nconst { Option } = Select\r\nconst { TabPane } = Tabs;\r\nconst Dashboard = () => {\r\n    const [dataChart, setDataChart] = useState({})\r\n    const [dataOrder, setOrder] = useState({})\r\n    const [dataOrderMonth, setOrderMonth] = useState({})\r\n    const [dataBulanan, setdataBulanan] = useState('')\r\n    const [filterBulanan, setfilterBulanan] = useState([])\r\n    const [itemProduk, setProduk] = useState([])\r\n    const [itemOrderAPI, setItemOrderAPi] = useState([])\r\n\r\n    const monthPrice = async (e) => {\r\n        const { data } = await getData('/order/sumpricemonth')\r\n\r\n        let filterIn = data.result.map(item => item.year)\r\n        setfilterBulanan([...new Set(filterIn)].reverse())\r\n        let Tanggal = [\"Januari\", \"Februari\", \"Maret\", \"April\", \"Mei\", \"Juni\", \"Juli\", \"Agustus\", \"September\", \"Oktober\", \"November\", \"Desember\"]\r\n        if (e) {\r\n            let filterYear = data.result.filter(item => String(item.year).includes(e))\r\n            let monthFilter = filterYear.map(item => Tanggal[item.month - 1])\r\n            let mapping = filterYear.map(item => String(item.Price))\r\n            console.log(monthFilter)\r\n            // setdataBulanan(filterYear)\r\n            setOrderMonth({\r\n                labels: monthFilter,\r\n                datasets: [\r\n                    {\r\n                        label: \"Total\",\r\n                        data: mapping,\r\n                        backgroundColor: [\"rgba(75, 192, 192, 0.6)\"],\r\n                        borderWidth: 4\r\n                    }\r\n                ]\r\n            });\r\n\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        monthPrice()\r\n        const orderAPi = async () => {\r\n            const { data } = await getData('/order/api')\r\n            setItemOrderAPi(data.result)\r\n        }\r\n        const produk = async () => {\r\n            const { data } = await getData('/pos')\r\n            setProduk(data.result)\r\n        }\r\n        const fetDataJualan = async () => {\r\n            let pricing = [];\r\n            let year = [];\r\n            getData('/order/sumprice').then(response => {\r\n                console.log(response)\r\n                for (const dataObj of response.data.result) {\r\n                    pricing.push(parseInt(dataObj.Price));\r\n                    year.push(parseInt(dataObj.year));\r\n                }\r\n                setOrder({\r\n                    labels: year,\r\n                    datasets: [\r\n                        {\r\n                            label: year,\r\n                            data: pricing,\r\n                            backgroundColor: [\"rgba(75, 192, 192, 0.6)\"],\r\n                            borderWidth: 4\r\n                        }\r\n                    ]\r\n                });\r\n            })\r\n            // console.log(data, 'indate')\r\n        }\r\n        const fetData = async () => {\r\n            const { data } = await getData('/user')\r\n            let status1 = data.result.filter(item => item.Status === 1)\r\n            let status2 = data.result.filter(item => item.Status === 2)\r\n            let status3 = data.result.filter(item => item.Status === 3)\r\n            let arrayUser = [status1.length, status2.length, status3.length]\r\n            console.log(status1, status2, status3)\r\n            setDataChart({\r\n                labels: [\"Kasir\", \"Pembeli\", \"Admin\"],\r\n                datasets: [{\r\n                    label: [\"Kasir\", \"Pembeli\", \"Admin\"],\r\n                    data: arrayUser,\r\n                    backgroundColor: [\r\n                        '#FF6384',\r\n                        '#36A2EB',\r\n                        '#FFCE56'\r\n                    ],\r\n                    hoverBackgroundColor: [\r\n                        '#FF6384',\r\n                        '#36A2EB',\r\n                        '#FFCE56'\r\n                    ]\r\n                }],\r\n                backgroundColor: \"rgba(220,220,220,1)\",\r\n            })\r\n        }\r\n        fetData()\r\n        orderAPi()\r\n        produk()\r\n        fetDataJualan()\r\n    }, [])\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className=\"d-flex justify-content-around\">\r\n                <Tabs defaultActiveKey=\"1\">\r\n                    <TabPane tab=\"User\" key=\"1\">\r\n                        <div className=\"mt-3\" style={{ width: 500, height: '100%', }}>\r\n                            <Doughnut data={dataChart} />\r\n                        </div>\r\n                    </TabPane>\r\n                    <TabPane tab=\"Rekap (Tahunan)\" key=\"2\">\r\n                        <div className=\"mt-3\" style={{ width: 500, height: '100%', }}>\r\n                            <Line data={dataOrder} />\r\n                        </div>\r\n                    </TabPane>\r\n                    <TabPane tab=\"Rekap (Bulanan)\" key=\"3\">\r\n                        <div className=\"d-flex justify-content-center \">\r\n                            <Select onChange={monthPrice} style={{ width: 200 }} placeholder=\"Tahun\">\r\n                                {filterBulanan && filterBulanan.map((item, index) =>\r\n                                    // <button key={index} onClick={() => monthPrice(item)} className=\"mr-2\">{item}</button>\r\n                                    <Option key={index} value={item}>{item}</Option>\r\n                                )}\r\n                            </Select>\r\n                        </div>\r\n                        <div className=\"mt-3\" style={{ width: 500, height: '100%', }}>\r\n                            <Bar data={dataOrderMonth} />\r\n                        </div>\r\n                    </TabPane>\r\n                </Tabs>\r\n\r\n\r\n                <div className=\"d-block\">\r\n                    <div style={{ background: '#303fc2', width: 230, height: 150, opacity: '50%', borderRadius: 10 }}>\r\n                        <div className=\"text-white p-2\" style={{ borderBottom: '1px solid white' }}>\r\n                            <div>Produk</div>\r\n                        </div>\r\n                        <div className=\"text-white ml-2\" style={{ fontSize: 80 }}>{itemProduk.length > 0 ? itemProduk.length : 0}<span style={{ fontSize: 15 }}>item</span></div>\r\n                    </div>\r\n                    <div className=\"mt-3\" style={{ background: '#303fc2', width: 230, height: 150, opacity: '50%', borderRadius: 10 }}>\r\n                        <div className=\"text-white p-2\" style={{ borderBottom: '1px solid white' }}>\r\n                            <div>Total Penjualan</div>\r\n                        </div>\r\n                        <div className=\"text-white ml-2\" style={{ fontSize: 80 }}>{itemOrderAPI.length > 0 ? itemOrderAPI.length : 0}</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default withRouter(Dashboard)","E:\\posappku\\POSAPP_with_redux\\src\\Component\\Home\\ProductAdministrator.js",["183","184","185","186","187","188","189"],"import React, { Fragment, useEffect, useState, useCallback } from 'react'\r\nimport { Table, Image, Input, Button, Modal, Tag } from 'antd'\r\nimport { getData, deleteData } from '../../utils/getUser'\r\nimport ModalNew from '../Layout/ModalNew'\r\nimport { HiPlusCircle } from 'react-icons/hi'\r\nimport { GrUpdate, GrFormTrash } from 'react-icons/gr'\r\nimport Swal from 'sweetalert2'\r\n\r\nconst ProductAdmin = () => {\r\n    const [produkU, setProdukU] = useState([])\r\n    const [searchProduk, setSearchProduk] = useState([])\r\n    const [modal, setModal] = useState(false)\r\n    const [updateDatas, setUpdateDatas] = useState({})\r\n    const [query, setQuery] = useState(\"OKOK\")\r\n\r\n    const getProduct = async (e) => {\r\n        const { data } = await getData('/pos')\r\n        const Item = data.result\r\n        setProdukU(Item.sort((a, b) => {\r\n            if (a.name < b.name)\r\n                return -1\r\n        }))\r\n        if (e) {\r\n            const filtered = Item.filter(item => String(item.name).toLowerCase().includes(String(e).toLowerCase()))\r\n            console.log(filtered)\r\n            setProdukU(filtered)\r\n        }\r\n    }\r\n    const updateData = (e) => {\r\n        setModal(true)\r\n        setUpdateDatas(e)\r\n    }\r\n    const OpenData = () => {\r\n        setModal(true)\r\n        setUpdateDatas(null)\r\n    }\r\n    useEffect(() => {\r\n        getProduct()\r\n    }, [modal])\r\n    const columns = [\r\n        {\r\n            title: 'No',\r\n            dataIndex: 'index',\r\n            key: 'index',\r\n        },\r\n        {\r\n            title: 'Nama Produk',\r\n            dataIndex: 'name',\r\n            key: 'name',\r\n        },\r\n        {\r\n            title: 'Gambar Produk',\r\n            dataIndex: 'image',\r\n            key: 'image',\r\n            render: (text, record) => <Image src={record.image} width={80} height={40} />\r\n        },\r\n        {\r\n            title: 'Sedia',\r\n            dataIndex: 'stock',\r\n            key: 'stock',\r\n            render: (text, record) => record.stock > 0 ? <Tag color=\"green\">Tersedia</Tag> : <Tag color=\"red\">Tidak Tersedia</Tag>\r\n        },\r\n        {\r\n            title: 'Harga',\r\n            dataIndex: 'price',\r\n            key: 'price',\r\n            render: (text, record) => <Tag color=\"geekblue\">Rp.{Number(record.price).toLocaleString('id-ID')}</Tag>\r\n        },\r\n        {\r\n            title: 'Action',\r\n            dataIndex: 'action',\r\n            key: 'action',\r\n            fixed: 'right',\r\n            width: 200,\r\n            render: (text, record) => (\r\n                <div className=\"d-flex\">\r\n                    <Button className=\"btn-active\" style={{ backgroundColor: '#a0d911', color: \"#FFF\", boxShadow: '6px 9px 7px -1px rgba(0,0,0,0.32)' }} onClick={() => updateData(record)} icon={<GrUpdate style={{ fontSize: 12, marginRight: 5, color: '#FFF' }} />}>Update</Button>\r\n                    <Button onClick={() => deleteDatas(record.id)} style={{ backgroundColor: '#f5222d', color: '#FFF', boxShadow: '6px 9px 7px -1px rgba(0,0,0,0.32)' }} className=\"btn-active\" icon={<GrFormTrash style={{ fontSize: 20, marginRight: 5, color: '#FFF' }} />}>Delete</Button>\r\n                </div>\r\n            )\r\n        },\r\n    ];\r\n    const deleteDatas = (e) => {\r\n        Swal.fire({\r\n            title: 'Apakah Yakin',\r\n            text: \"Produk akan terhapus secara permanent\",\r\n            icon: 'warning',\r\n            showCancelButton: true,\r\n            confirmButtonColor: '#3085d6',\r\n            cancelButtonColor: '#d33',\r\n            confirmButtonText: 'Hapus',\r\n            cancelButtonText: 'Batal'\r\n        }).then((result) => {\r\n            if (result.isConfirmed) {\r\n                deleteData(`/pos/${e}`).then(res => {\r\n                    // console.log(res, 'inidelete')\r\n                    getProduct()\r\n                    Swal.fire({\r\n                        position: 'center',\r\n                        icon: 'success',\r\n                        title: 'Data Berhasil Didelete',\r\n                        showConfirmButton: false,\r\n                        timer: 1500\r\n                    })\r\n                })\r\n            }\r\n        })\r\n    }\r\n    const handleCancel = () => {\r\n        setModal(false)\r\n    }\r\n    return (\r\n        <Fragment>\r\n            <div>\r\n                <div className=\"d-flex justify-content-between\">\r\n                    <Input onChange={(e) => getProduct(e.target.value)} style={{ width: 300 }} placeholder=\"Cari Produk\" />\r\n                    <Button onClick={() => OpenData()} style={{ backgroundColor: '#1890ff', color: '#FFF', boxShadow: '6px 9px 7px -1px rgba(0,0,0,0.32)' }} className=\"btn-active\" icon={<HiPlusCircle style={{ fontSize: 18, marginRight: 5 }} />}>Add Product</Button>\r\n                </div>\r\n                <div className=\"mt-3\">\r\n                    <Table columns={columns} dataSource={produkU.map((item, index) => { return { ...item, index: index + 1 } })} pagination={{ pageSize: 5 }} scroll={{ y: 300 }} />\r\n                </div>\r\n                {modal &&\r\n                    <Modal title={updateDatas ? \"Update Produk\" + \" \" + (updateDatas.name) : \"Tambah Produk\"} visible={modal} onCancel={() => handleCancel()} footer={null}>\r\n                        <ModalNew name=\"add\" modal={modal} handleCancel={handleCancel} updateDatas={updateDatas ? updateDatas : ''} />\r\n                    </Modal>\r\n                }\r\n            </div>\r\n        </Fragment >\r\n    )\r\n}\r\n\r\nexport default ProductAdmin;","E:\\posappku\\POSAPP_with_redux\\src\\Component\\Layout\\ModalNew.js",["190","191","192","193","194","195","196","197","198","199","200","201","202","203","204"],"import React, { Fragment, useEffect, useState, useCallback } from 'react'\r\nimport { Modal, Input, Form, Button, Select } from 'antd'\r\nimport './style.css'\r\nimport Swal from 'sweetalert2'\r\nimport { postData, getData, updateData } from '../../utils/getUser'\r\n\r\nconst ModalNew = (props) => {\r\n    const { name, modal, handleCancel, updateDatas } = props\r\n    const { TextArea } = Input\r\n    const { Option } = Select\r\n    const [readUpload, setReadUpload] = useState('')\r\n    const [updateProduk, setUpdateProduk] = useState({})\r\n    const [form] = Form.useForm();\r\n\r\n    const onFinish = async (values) => {\r\n        let data = new FormData()\r\n        if (updateDatas) {\r\n            data.append(\"id\", updateDatas.id)\r\n        }\r\n        data.append(\"name\", values.NameProduk)\r\n        data.append(\"description\", values.Deskripsi)\r\n        data.append(\"price\", parseInt(values.Price))\r\n        data.append(\"stock\", values.Stock)\r\n        data.append(\"id_category\", values.Category)\r\n        data.append(\"image\", values.Upload)\r\n        if (updateDatas) {\r\n            updateData(`/pos/${updateDatas.id}`, data).then(res => {\r\n                console.log(res.data, 'inires')\r\n                const { affectedRows } = res.data.result\r\n                if (affectedRows === 0) {\r\n                    Swal.fire({\r\n                        position: 'center',\r\n                        icon: 'error',\r\n                        title: \"Gagal Update\",\r\n                        showConfirmButton: false,\r\n                        timer: 1500\r\n                    })\r\n                } else {\r\n                    setUpdateProduk({})\r\n                    handleCancel()\r\n                    Swal.fire({\r\n                        position: 'center',\r\n                        icon: 'success',\r\n                        title: 'Data Berhasil Diupdate',\r\n                        showConfirmButton: false,\r\n                        timer: 1500\r\n                    })\r\n                }\r\n            }).catch(e => {\r\n                console.error(e.message)\r\n            })\r\n        } else {\r\n            postData('/pos', data).then(res => {\r\n                console.log(res.data, 'inires')\r\n                const { message } = res.data.result\r\n                if (message) {\r\n                    Swal.fire({\r\n                        position: 'center',\r\n                        icon: 'error',\r\n                        title: message,\r\n                        showConfirmButton: false,\r\n                        timer: 1500\r\n                    })\r\n                } else {\r\n                    setUpdateProduk({})\r\n                    handleCancel()\r\n                    Swal.fire({\r\n                        position: 'center',\r\n                        icon: 'success',\r\n                        title: 'Data Berhasil Ditambah',\r\n                        showConfirmButton: false,\r\n                        timer: 1500\r\n                    })\r\n                }\r\n            }).catch(e => {\r\n                console.error(e.message)\r\n            })\r\n        }\r\n    };\r\n\r\n\r\n    const onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n    useEffect(() => {\r\n        if (updateDatas) {\r\n            form.setFieldsValue({ Category: updateDatas.id_category, NameProduk: updateDatas.name, Price: updateDatas.price, Upload: updateDatas.image, Deskripsi: updateDatas.description, Stock: updateDatas.stock })\r\n            setUpdateProduk({ Category: updateDatas.id_category, NameProduk: updateDatas.name, Price: updateDatas.price, Upload: updateDatas.image, Deskripsi: updateDatas.description, Stock: updateDatas.stock })\r\n        }\r\n    }, [updateDatas])\r\n    const InputForm = [{\r\n        label: \"Upload Gambar\",\r\n        name: \"Upload\",\r\n        required: true,\r\n        message: \"Gambar Harus Diupload\"\r\n    }, {\r\n        label: \"Nama Hidangan\",\r\n        name: \"NameProduk\",\r\n        required: true,\r\n        message: \"Masukkan Nama Barang\"\r\n    }, {\r\n        label: \"Harga\",\r\n        name: \"Price\",\r\n        required: true,\r\n        message: \"Masukkan Harga\"\r\n    }, {\r\n        label: \"Kategori\",\r\n        name: \"Category\",\r\n        required: true,\r\n        message: \"Masukkan Kategori\"\r\n    }, {\r\n        label: \"Deskripsi\",\r\n        name: \"Deskripsi\",\r\n        required: true,\r\n        message: \"Masukkan Deskripsi\"\r\n    }, {\r\n        label: \"Stock\",\r\n        name: \"Stock\",\r\n        required: true,\r\n        message: \"Pilih Stock\"\r\n    }]\r\n    const UpdateInput = (e) => {\r\n        console.log(e, 'inieeee')\r\n        switch (e) {\r\n            case \"NameProduk\":\r\n                return updateProduk.NameProduk\r\n                break;\r\n            case \"Stock\":\r\n                return updateProduk.Stock\r\n                break;\r\n            case \"Price\":\r\n                return updateProduk.Price\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    const HandleChangeCateogry = (value) => {\r\n        form.setFieldsValue({ Category: value });\r\n    }\r\n    const HandleChangeStock = (value) => {\r\n        form.setFieldsValue({ Stock: value });\r\n    }\r\n    const selectComponent = (e) => {\r\n        let category = [{ value: 1, label: \"Minuman\" }, { value: 2, label: \"Makanan\" }]\r\n        let stock = [{ value: 999999999999999, label: \"Tersedia\" }, { value: 0, label: \"Tidak Tersedia\" }]\r\n        switch (e) {\r\n            case \"Category\":\r\n                return (\r\n                    <Select style={{ width: 350 }} onChange={HandleChangeCateogry} defaultValue={updateProduk.Category ? updateProduk.Category : null} allowClear>\r\n                        {category.map((item, index) =>\r\n                            <Option value={item.value}>{item.label}</Option>\r\n                        )}\r\n                    </Select>\r\n                )\r\n                break;\r\n            case \"Stock\":\r\n                return (\r\n                    <Select style={{ width: 350 }} onChange={HandleChangeStock} defaultValue={updateProduk.Stock > 0 ? \"Tersedia\" : updateProduk.Stock < 0 ? \"Tidak Tersedia\" : null} allowClear>\r\n                        {stock.map((item, index) =>\r\n                            <Option value={item.value}>{item.label}</Option>\r\n                        )}\r\n                    </Select>\r\n                )\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n    }\r\n    const SelectIn = (name) => {\r\n        switch (name.name) {\r\n            case \"Category\":\r\n                return selectComponent(name.name)\r\n                break;\r\n            case \"Stock\":\r\n                return selectComponent(name.name)\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    const Description = () => {\r\n        return (\r\n            <div className=\"d-block\">\r\n                <div>Minimal 12 Karakter</div>\r\n                <TextArea style={{ width: 350 }} defaultValue={updateProduk.Deskripsi} />\r\n            </div>\r\n        )\r\n    }\r\n    const handleUpload = (e) => {\r\n        let formData = new FormData()\r\n        formData.append('image', e.target.files[0])\r\n        postData('/hdfs/upload', formData).then(res => {\r\n            setReadUpload(res.data.result.url)\r\n            form.setFieldsValue({ Upload: res.data.result.url });\r\n        }).catch(e => {\r\n            console.error(e.message)\r\n        })\r\n    }\r\n    const UploadImage = () => {\r\n        const urli = readUpload.split(\"-\")[1]\r\n        return (\r\n            <div style={{ width: 350 }} className=\"d-flex\">\r\n                <Input defaultValue={urli || updateProduk.Upload && updateProduk.Upload.split(\"-\")[1] || \"Masukkan File\"} disabled />\r\n                <Button onClick={() => document.getElementById('Image').click()}>\r\n                    Upload</Button>\r\n                <Input id=\"Image\" type=\"file\" name=\"Image\" className=\"d-none\" accept=\"image/*\" onChange={handleUpload} />\r\n            </div>\r\n        )\r\n    }\r\n    const modalAdd = () => {\r\n        return (\r\n            <Form name=\"add\" form={form} onFinish={onFinish} onFinishFailed={onFinishFailed} initialValues={{ NameProduk: null }}>\r\n                {InputForm.map((item, index) =>\r\n                    <Form.Item key={index} label={item.label} name={item.name} rules={[{ required: item.required, message: item.message }]}>\r\n                        <div className=\"d-flex justify-content-end\">\r\n                            {item.name === \"Category\" ? (\r\n                                <SelectIn name=\"Category\" />\r\n                            ) : item.name === \"Stock\" ? (\r\n                                <SelectIn name=\"Stock\" />\r\n                            ) : item.name === \"Deskripsi\" ? (\r\n                                <Description />\r\n                            ) : item.name === \"Upload\" ? (\r\n                                <UploadImage />\r\n                            ) : (\r\n                                                <Input style={{ width: 350 }} defaultValue={UpdateInput(item.name)} />\r\n                                            )}\r\n                        </div>\r\n                    </Form.Item>\r\n                )}\r\n                <Form.Item >\r\n                    <div className=\"d-flex justify-content-center\">\r\n                        <Button className=\"btn-active\" htmlType=\"submit\" style={{ width: 300, backgroundColor: 'rgb(78, 131, 126)', color: 'white' }}>Submit</Button>\r\n                    </div>\r\n                </Form.Item>\r\n            </Form>\r\n        )\r\n    }\r\n    const ShowModal = () => {\r\n        switch (name) {\r\n            case \"add\":\r\n                return modalAdd()\r\n                break;\r\n\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    return <ShowModal />\r\n}\r\n\r\nexport default ModalNew;",{"ruleId":"205","replacedBy":"206"},{"ruleId":"207","replacedBy":"208"},{"ruleId":"209","severity":1,"message":"210","line":9,"column":10,"nodeType":"211","messageId":"212","endLine":9,"endColumn":22},{"ruleId":"209","severity":1,"message":"213","line":10,"column":8,"nodeType":"211","messageId":"212","endLine":10,"endColumn":15},{"ruleId":"209","severity":1,"message":"214","line":12,"column":10,"nodeType":"211","messageId":"212","endLine":12,"endColumn":17},{"ruleId":"209","severity":1,"message":"215","line":15,"column":10,"nodeType":"211","messageId":"212","endLine":15,"endColumn":18},{"ruleId":"209","severity":1,"message":"216","line":21,"column":9,"nodeType":"211","messageId":"212","endLine":21,"endColumn":20},{"ruleId":"209","severity":1,"message":"217","line":7,"column":10,"nodeType":"211","messageId":"212","endLine":7,"endColumn":20},{"ruleId":"209","severity":1,"message":"218","line":7,"column":22,"nodeType":"211","messageId":"212","endLine":7,"endColumn":30},{"ruleId":"209","severity":1,"message":"219","line":27,"column":15,"nodeType":"211","messageId":"212","endLine":27,"endColumn":20},{"ruleId":"220","severity":1,"message":"221","line":41,"column":8,"nodeType":"222","endLine":41,"endColumn":10,"suggestions":"223"},{"ruleId":"224","severity":1,"message":"225","line":280,"column":193,"nodeType":"226","messageId":"227","endLine":280,"endColumn":195},{"ruleId":"224","severity":1,"message":"225","line":286,"column":217,"nodeType":"226","messageId":"227","endLine":286,"endColumn":219},{"ruleId":"224","severity":1,"message":"225","line":293,"column":213,"nodeType":"226","messageId":"227","endLine":293,"endColumn":215},{"ruleId":"224","severity":1,"message":"228","line":307,"column":49,"nodeType":"226","messageId":"227","endLine":307,"endColumn":51},{"ruleId":"209","severity":1,"message":"229","line":3,"column":10,"nodeType":"211","messageId":"212","endLine":3,"endColumn":13},{"ruleId":"209","severity":1,"message":"230","line":3,"column":15,"nodeType":"211","messageId":"212","endLine":3,"endColumn":18},{"ruleId":"209","severity":1,"message":"231","line":7,"column":11,"nodeType":"211","messageId":"212","endLine":7,"endColumn":19},{"ruleId":"209","severity":1,"message":"232","line":95,"column":7,"nodeType":"211","messageId":"212","endLine":95,"endColumn":25},{"ruleId":"209","severity":1,"message":"233","line":8,"column":15,"nodeType":"211","messageId":"212","endLine":8,"endColumn":28},{"ruleId":"209","severity":1,"message":"234","line":9,"column":15,"nodeType":"211","messageId":"212","endLine":9,"endColumn":21},{"ruleId":"235","severity":1,"message":"236","line":36,"column":18,"nodeType":"237","messageId":"238","endLine":36,"endColumn":49},{"ruleId":"205","replacedBy":"239"},{"ruleId":"207","replacedBy":"240"},{"ruleId":"209","severity":1,"message":"241","line":33,"column":21,"nodeType":"211","messageId":"212","endLine":33,"endColumn":26},{"ruleId":"209","severity":1,"message":"242","line":42,"column":25,"nodeType":"211","messageId":"212","endLine":42,"endColumn":33},{"ruleId":"205","replacedBy":"243"},{"ruleId":"207","replacedBy":"244"},{"ruleId":"245","severity":1,"message":"246","line":8,"column":1,"nodeType":"247","endLine":19,"endColumn":2},{"ruleId":"209","severity":1,"message":"248","line":5,"column":5,"nodeType":"211","messageId":"212","endLine":5,"endColumn":13},{"ruleId":"205","replacedBy":"249"},{"ruleId":"207","replacedBy":"250"},{"ruleId":"209","severity":1,"message":"251","line":8,"column":8,"nodeType":"211","messageId":"212","endLine":8,"endColumn":9},{"ruleId":"209","severity":1,"message":"252","line":15,"column":12,"nodeType":"211","messageId":"212","endLine":15,"endColumn":17},{"ruleId":"209","severity":1,"message":"253","line":15,"column":19,"nodeType":"211","messageId":"212","endLine":15,"endColumn":27},{"ruleId":"209","severity":1,"message":"254","line":19,"column":15,"nodeType":"211","messageId":"212","endLine":19,"endColumn":21},{"ruleId":"255","severity":1,"message":"256","line":76,"column":41,"nodeType":"257","endLine":76,"endColumn":89},{"ruleId":"255","severity":1,"message":"256","line":107,"column":41,"nodeType":"257","endLine":107,"endColumn":89},{"ruleId":"258","severity":1,"message":"259","line":109,"column":49,"nodeType":"257","endLine":109,"endColumn":226},{"ruleId":"220","severity":1,"message":"260","line":139,"column":8,"nodeType":"222","endLine":139,"endColumn":22,"suggestions":"261"},{"ruleId":"220","severity":1,"message":"262","line":144,"column":8,"nodeType":"222","endLine":144,"endColumn":10,"suggestions":"263"},{"ruleId":"255","severity":1,"message":"256","line":168,"column":45,"nodeType":"257","endLine":168,"endColumn":90},{"ruleId":"255","severity":1,"message":"256","line":171,"column":45,"nodeType":"257","endLine":171,"endColumn":92},{"ruleId":"255","severity":1,"message":"256","line":174,"column":45,"nodeType":"257","endLine":174,"endColumn":92},{"ruleId":"255","severity":1,"message":"256","line":177,"column":45,"nodeType":"257","endLine":177,"endColumn":94},{"ruleId":"209","severity":1,"message":"264","line":1,"column":17,"nodeType":"211","messageId":"212","endLine":1,"endColumn":26},{"ruleId":"209","severity":1,"message":"265","line":1,"column":28,"nodeType":"211","messageId":"212","endLine":1,"endColumn":36},{"ruleId":"209","severity":1,"message":"266","line":3,"column":60,"nodeType":"211","messageId":"212","endLine":3,"endColumn":70},{"ruleId":"209","severity":1,"message":"267","line":10,"column":9,"nodeType":"211","messageId":"212","endLine":10,"endColumn":26},{"ruleId":"209","severity":1,"message":"268","line":13,"column":12,"nodeType":"211","messageId":"212","endLine":13,"endColumn":23},{"ruleId":"209","severity":1,"message":"269","line":13,"column":25,"nodeType":"211","messageId":"212","endLine":13,"endColumn":39},{"ruleId":"209","severity":1,"message":"270","line":1,"column":48,"nodeType":"211","messageId":"212","endLine":1,"endColumn":59},{"ruleId":"209","severity":1,"message":"271","line":11,"column":12,"nodeType":"211","messageId":"212","endLine":11,"endColumn":24},{"ruleId":"209","severity":1,"message":"272","line":11,"column":26,"nodeType":"211","messageId":"212","endLine":11,"endColumn":41},{"ruleId":"209","severity":1,"message":"252","line":14,"column":12,"nodeType":"211","messageId":"212","endLine":14,"endColumn":17},{"ruleId":"209","severity":1,"message":"253","line":14,"column":19,"nodeType":"211","messageId":"212","endLine":14,"endColumn":27},{"ruleId":"273","severity":1,"message":"274","line":19,"column":37,"nodeType":"275","messageId":"276","endLine":19,"endColumn":39},{"ruleId":"277","severity":1,"message":"278","line":123,"column":65,"nodeType":"226","messageId":"279","endLine":123,"endColumn":66},{"ruleId":"209","severity":1,"message":"280","line":1,"column":17,"nodeType":"211","messageId":"212","endLine":1,"endColumn":25},{"ruleId":"209","severity":1,"message":"270","line":1,"column":48,"nodeType":"211","messageId":"212","endLine":1,"endColumn":59},{"ruleId":"209","severity":1,"message":"281","line":2,"column":10,"nodeType":"211","messageId":"212","endLine":2,"endColumn":15},{"ruleId":"209","severity":1,"message":"214","line":5,"column":20,"nodeType":"211","messageId":"212","endLine":5,"endColumn":27},{"ruleId":"209","severity":1,"message":"282","line":8,"column":19,"nodeType":"211","messageId":"212","endLine":8,"endColumn":24},{"ruleId":"220","severity":1,"message":"283","line":90,"column":8,"nodeType":"222","endLine":90,"endColumn":21,"suggestions":"284"},{"ruleId":"285","severity":1,"message":"286","line":127,"column":17,"nodeType":"287","messageId":"288","endLine":127,"endColumn":23},{"ruleId":"285","severity":1,"message":"286","line":130,"column":17,"nodeType":"287","messageId":"288","endLine":130,"endColumn":23},{"ruleId":"285","severity":1,"message":"286","line":155,"column":17,"nodeType":"287","messageId":"288","endLine":155,"endColumn":23},{"ruleId":"285","severity":1,"message":"286","line":164,"column":17,"nodeType":"287","messageId":"288","endLine":164,"endColumn":23},{"ruleId":"285","severity":1,"message":"286","line":174,"column":17,"nodeType":"287","messageId":"288","endLine":174,"endColumn":23},{"ruleId":"285","severity":1,"message":"286","line":177,"column":17,"nodeType":"287","messageId":"288","endLine":177,"endColumn":23},{"ruleId":"289","severity":1,"message":"290","line":204,"column":43,"nodeType":"291","messageId":"292","endLine":204,"endColumn":45},{"ruleId":"289","severity":1,"message":"290","line":204,"column":66,"nodeType":"291","messageId":"292","endLine":204,"endColumn":68},{"ruleId":"285","severity":1,"message":"286","line":243,"column":17,"nodeType":"287","messageId":"288","endLine":243,"endColumn":23},"no-native-reassign",["293"],"no-negated-in-lhs",["294"],"no-unused-vars","'notification' is defined but never used.","Identifier","unusedVar","'Product' is defined but never used.","'getData' is defined but never used.","'IdDetail' is assigned a value but never used.","'redirecting' is assigned a value but never used.","'withRouter' is defined but never used.","'Redirect' is defined but never used.","'split' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'NameUser' and 'getOut'. Either include them or remove the dependency array.","ArrayExpression",["295"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","'Row' is defined but never used.","'Col' is defined but never used.","'dispatch' is assigned a value but never used.","'mapDispatchToProps' is assigned a value but never used.","'authorization' is assigned a value but never used.","'userId' is assigned a value but never used.","no-template-curly-in-string","Unexpected template string expression.","Literal","unexpectedTemplateExpression",["293"],["294"],"'price' is assigned a value but never used.","'newTotal' is assigned a value but never used.",["293"],["294"],"import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","'getToken' is assigned a value but never used.",["293"],["294"],"'_' is defined but never used.","'query' is assigned a value but never used.","'setQuery' is assigned a value but never used.","'result' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","React Hook useCallback has a missing dependency: 'history'. Either include it or remove the dependency array.",["296"],"React Hook useEffect has missing dependencies: 'NameUser' and 'getDataProduct'. Either include them or remove the dependency array.",["297"],"'useEffect' is defined but never used.","'useState' is defined but never used.","'useHistory' is defined but never used.","'REACT_APP_API_URL' is assigned a value but never used.","'dataBulanan' is assigned a value but never used.","'setdataBulanan' is assigned a value but never used.","'useCallback' is defined but never used.","'searchProduk' is assigned a value but never used.","'setSearchProduk' is assigned a value but never used.","array-callback-return","Array.prototype.sort() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","'Fragment' is defined but never used.","'Modal' is defined but never used.","'modal' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'form'. Either include it or remove the dependency array.",["298"],"no-unreachable","Unreachable code.","BreakStatement","unreachableCode","no-mixed-operators","Unexpected mix of '||' and '&&'.","LogicalExpression","unexpectedMixedOperator","no-global-assign","no-unsafe-negation",{"desc":"299","fix":"300"},{"desc":"301","fix":"302"},{"desc":"303","fix":"304"},{"desc":"305","fix":"306"},"Update the dependencies array to be: [NameUser, getOut]",{"range":"307","text":"308"},"Update the dependencies array to be: [history]",{"range":"309","text":"310"},"Update the dependencies array to be: [NameUser, getDataProduct]",{"range":"311","text":"312"},"Update the dependencies array to be: [form, updateDatas]",{"range":"313","text":"314"},[1561,1563],"[NameUser, getOut]",[6971,6985],"[history]",[7066,7068],"[NameUser, getDataProduct]",[3642,3655],"[form, updateDatas]"]